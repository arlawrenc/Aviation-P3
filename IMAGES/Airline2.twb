<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.0918.1727                               -->
<workbook original-version='18.1' source-build='2020.3.1 (20203.20.0918.1727)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='clean_combinedatl.csv+ (Multiple Connections)' inline='true' name='federated.0bom3vy1h8a8qp1b8ndui0v58ud2' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Airport_Master_data' name='textscan.0b5dimp10gqvew19nkz8h0keid5f'>
            <connection class='textscan' directory='C:/Users/audre/OneDrive/Documents/BOOTCAMP/FINAL PROJECT - 3/Aviation-P3' filename='Airport_Master_data.csv' password='' server='' />
          </named-connection>
          <named-connection caption='clean_combinedatl' name='textscan.0ss063c0ulkwqf138g2zt0nsglhz'>
            <connection class='textscan' directory='C:/Users/audre/OneDrive/Documents/BOOTCAMP/FINAL PROJECT - 3/Aviation-P3' filename='clean_combinedatl.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[clean_combinedatl.csv].[ORIGIN]' />
              <expression op='[Airport_Master_data.csv].[AIRPORT]' />
            </expression>
          </clause>
          <relation connection='textscan.0ss063c0ulkwqf138g2zt0nsglhz' name='clean_combinedatl.csv' table='[clean_combinedatl#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='YEAR' ordinal='1' />
              <column datatype='integer' name='QUARTER' ordinal='2' />
              <column datatype='integer' name='MONTH' ordinal='3' />
              <column datatype='integer' name='DAY_OF_MONTH' ordinal='4' />
              <column datatype='integer' name='DAY_OF_WEEK' ordinal='5' />
              <column datatype='date' name='FL_DATE' ordinal='6' />
              <column datatype='string' name='OP_UNIQUE_CARRIER' ordinal='7' />
              <column datatype='string' name='ORIGIN' ordinal='8' />
              <column datatype='string' name='ORIGIN_CITY_NAME' ordinal='9' />
              <column datatype='string' name='DEST' ordinal='10' />
              <column datatype='string' name='DEST_CITY_NAME' ordinal='11' />
              <column datatype='integer' name='CRS_DEP_TIME' ordinal='12' />
              <column datatype='real' name='DEP_TIME' ordinal='13' />
              <column datatype='real' name='DEP_DELAY' ordinal='14' />
              <column datatype='real' name='DEP_DEL15' ordinal='15' />
              <column datatype='real' name='WHEELS_OFF' ordinal='16' />
              <column datatype='real' name='WHEELS_ON' ordinal='17' />
              <column datatype='integer' name='CRS_ARR_TIME' ordinal='18' />
              <column datatype='real' name='ARR_TIME' ordinal='19' />
              <column datatype='real' name='ARR_DELAY' ordinal='20' />
              <column datatype='real' name='ARR_DEL15' ordinal='21' />
              <column datatype='real' name='DISTANCE' ordinal='22' />
            </columns>
          </relation>
          <relation connection='textscan.0b5dimp10gqvew19nkz8h0keid5f' name='Airport_Master_data.csv' table='[Airport_Master_data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='AIRPORT' ordinal='0' />
              <column datatype='string' name='DISPLAY_AIRPORT_NAME' ordinal='1' />
              <column datatype='string' name='DISPLAY_AIRPORT_CITY_NAME_FULL' ordinal='2' />
              <column datatype='real' name='LATITUDE' ordinal='3' />
              <column datatype='real' name='LONGITUDE' ordinal='4' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[clean_combinedatl.csv].[ORIGIN]' />
              <expression op='[Airport_Master_data.csv].[AIRPORT]' />
            </expression>
          </clause>
          <relation connection='textscan.0ss063c0ulkwqf138g2zt0nsglhz' name='clean_combinedatl.csv' table='[clean_combinedatl#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='integer' name='YEAR' ordinal='1' />
              <column datatype='integer' name='QUARTER' ordinal='2' />
              <column datatype='integer' name='MONTH' ordinal='3' />
              <column datatype='integer' name='DAY_OF_MONTH' ordinal='4' />
              <column datatype='integer' name='DAY_OF_WEEK' ordinal='5' />
              <column datatype='date' name='FL_DATE' ordinal='6' />
              <column datatype='string' name='OP_UNIQUE_CARRIER' ordinal='7' />
              <column datatype='string' name='ORIGIN' ordinal='8' />
              <column datatype='string' name='ORIGIN_CITY_NAME' ordinal='9' />
              <column datatype='string' name='DEST' ordinal='10' />
              <column datatype='string' name='DEST_CITY_NAME' ordinal='11' />
              <column datatype='integer' name='CRS_DEP_TIME' ordinal='12' />
              <column datatype='real' name='DEP_TIME' ordinal='13' />
              <column datatype='real' name='DEP_DELAY' ordinal='14' />
              <column datatype='real' name='DEP_DEL15' ordinal='15' />
              <column datatype='real' name='WHEELS_OFF' ordinal='16' />
              <column datatype='real' name='WHEELS_ON' ordinal='17' />
              <column datatype='integer' name='CRS_ARR_TIME' ordinal='18' />
              <column datatype='real' name='ARR_TIME' ordinal='19' />
              <column datatype='real' name='ARR_DELAY' ordinal='20' />
              <column datatype='real' name='ARR_DEL15' ordinal='21' />
              <column datatype='real' name='DISTANCE' ordinal='22' />
            </columns>
          </relation>
          <relation connection='textscan.0b5dimp10gqvew19nkz8h0keid5f' name='Airport_Master_data.csv' table='[Airport_Master_data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='AIRPORT' ordinal='0' />
              <column datatype='string' name='DISPLAY_AIRPORT_NAME' ordinal='1' />
              <column datatype='string' name='DISPLAY_AIRPORT_CITY_NAME_FULL' ordinal='2' />
              <column datatype='real' name='LATITUDE' ordinal='3' />
              <column datatype='real' name='LONGITUDE' ordinal='4' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[clean_combinedatl.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Airport_Master_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[clean_combinedatl.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_combinedatl.csv_4E4242A0F1B44EFAB333CDAE2EACF7E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>YEAR</remote-name>
            <remote-type>20</remote-type>
            <local-name>[YEAR]</local-name>
            <parent-name>[clean_combinedatl.csv]</parent-name>
            <remote-alias>YEAR</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_combinedatl.csv_4E4242A0F1B44EFAB333CDAE2EACF7E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>QUARTER</remote-name>
            <remote-type>20</remote-type>
            <local-name>[QUARTER]</local-name>
            <parent-name>[clean_combinedatl.csv]</parent-name>
            <remote-alias>QUARTER</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_combinedatl.csv_4E4242A0F1B44EFAB333CDAE2EACF7E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MONTH</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MONTH]</local-name>
            <parent-name>[clean_combinedatl.csv]</parent-name>
            <remote-alias>MONTH</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_combinedatl.csv_4E4242A0F1B44EFAB333CDAE2EACF7E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DAY_OF_MONTH</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DAY_OF_MONTH]</local-name>
            <parent-name>[clean_combinedatl.csv]</parent-name>
            <remote-alias>DAY_OF_MONTH</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_combinedatl.csv_4E4242A0F1B44EFAB333CDAE2EACF7E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DAY_OF_WEEK</remote-name>
            <remote-type>20</remote-type>
            <local-name>[DAY_OF_WEEK]</local-name>
            <parent-name>[clean_combinedatl.csv]</parent-name>
            <remote-alias>DAY_OF_WEEK</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_combinedatl.csv_4E4242A0F1B44EFAB333CDAE2EACF7E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FL_DATE</remote-name>
            <remote-type>133</remote-type>
            <local-name>[FL_DATE]</local-name>
            <parent-name>[clean_combinedatl.csv]</parent-name>
            <remote-alias>FL_DATE</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_combinedatl.csv_4E4242A0F1B44EFAB333CDAE2EACF7E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OP_UNIQUE_CARRIER</remote-name>
            <remote-type>129</remote-type>
            <local-name>[OP_UNIQUE_CARRIER]</local-name>
            <parent-name>[clean_combinedatl.csv]</parent-name>
            <remote-alias>OP_UNIQUE_CARRIER</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_combinedatl.csv_4E4242A0F1B44EFAB333CDAE2EACF7E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORIGIN</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ORIGIN]</local-name>
            <parent-name>[clean_combinedatl.csv]</parent-name>
            <remote-alias>ORIGIN</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_combinedatl.csv_4E4242A0F1B44EFAB333CDAE2EACF7E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORIGIN_CITY_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ORIGIN_CITY_NAME]</local-name>
            <parent-name>[clean_combinedatl.csv]</parent-name>
            <remote-alias>ORIGIN_CITY_NAME</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_combinedatl.csv_4E4242A0F1B44EFAB333CDAE2EACF7E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEST</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DEST]</local-name>
            <parent-name>[clean_combinedatl.csv]</parent-name>
            <remote-alias>DEST</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_combinedatl.csv_4E4242A0F1B44EFAB333CDAE2EACF7E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEST_CITY_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DEST_CITY_NAME]</local-name>
            <parent-name>[clean_combinedatl.csv]</parent-name>
            <remote-alias>DEST_CITY_NAME</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_combinedatl.csv_4E4242A0F1B44EFAB333CDAE2EACF7E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CRS_DEP_TIME</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CRS_DEP_TIME]</local-name>
            <parent-name>[clean_combinedatl.csv]</parent-name>
            <remote-alias>CRS_DEP_TIME</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_combinedatl.csv_4E4242A0F1B44EFAB333CDAE2EACF7E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEP_TIME</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DEP_TIME]</local-name>
            <parent-name>[clean_combinedatl.csv]</parent-name>
            <remote-alias>DEP_TIME</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_combinedatl.csv_4E4242A0F1B44EFAB333CDAE2EACF7E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEP_DELAY</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DEP_DELAY]</local-name>
            <parent-name>[clean_combinedatl.csv]</parent-name>
            <remote-alias>DEP_DELAY</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_combinedatl.csv_4E4242A0F1B44EFAB333CDAE2EACF7E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEP_DEL15</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DEP_DEL15]</local-name>
            <parent-name>[clean_combinedatl.csv]</parent-name>
            <remote-alias>DEP_DEL15</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_combinedatl.csv_4E4242A0F1B44EFAB333CDAE2EACF7E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WHEELS_OFF</remote-name>
            <remote-type>5</remote-type>
            <local-name>[WHEELS_OFF]</local-name>
            <parent-name>[clean_combinedatl.csv]</parent-name>
            <remote-alias>WHEELS_OFF</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_combinedatl.csv_4E4242A0F1B44EFAB333CDAE2EACF7E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>WHEELS_ON</remote-name>
            <remote-type>5</remote-type>
            <local-name>[WHEELS_ON]</local-name>
            <parent-name>[clean_combinedatl.csv]</parent-name>
            <remote-alias>WHEELS_ON</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_combinedatl.csv_4E4242A0F1B44EFAB333CDAE2EACF7E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CRS_ARR_TIME</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CRS_ARR_TIME]</local-name>
            <parent-name>[clean_combinedatl.csv]</parent-name>
            <remote-alias>CRS_ARR_TIME</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_combinedatl.csv_4E4242A0F1B44EFAB333CDAE2EACF7E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ARR_TIME</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ARR_TIME]</local-name>
            <parent-name>[clean_combinedatl.csv]</parent-name>
            <remote-alias>ARR_TIME</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_combinedatl.csv_4E4242A0F1B44EFAB333CDAE2EACF7E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ARR_DELAY</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ARR_DELAY]</local-name>
            <parent-name>[clean_combinedatl.csv]</parent-name>
            <remote-alias>ARR_DELAY</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_combinedatl.csv_4E4242A0F1B44EFAB333CDAE2EACF7E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ARR_DEL15</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ARR_DEL15]</local-name>
            <parent-name>[clean_combinedatl.csv]</parent-name>
            <remote-alias>ARR_DEL15</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_combinedatl.csv_4E4242A0F1B44EFAB333CDAE2EACF7E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DISTANCE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DISTANCE]</local-name>
            <parent-name>[clean_combinedatl.csv]</parent-name>
            <remote-alias>DISTANCE</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_combinedatl.csv_4E4242A0F1B44EFAB333CDAE2EACF7E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AIRPORT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AIRPORT]</local-name>
            <parent-name>[Airport_Master_data.csv]</parent-name>
            <remote-alias>AIRPORT</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_combinedatl.csv_4E4242A0F1B44EFAB333CDAE2EACF7E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DISPLAY_AIRPORT_NAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DISPLAY_AIRPORT_NAME]</local-name>
            <parent-name>[Airport_Master_data.csv]</parent-name>
            <remote-alias>DISPLAY_AIRPORT_NAME</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_combinedatl.csv_4E4242A0F1B44EFAB333CDAE2EACF7E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DISPLAY_AIRPORT_CITY_NAME_FULL</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DISPLAY_AIRPORT_CITY_NAME_FULL]</local-name>
            <parent-name>[Airport_Master_data.csv]</parent-name>
            <remote-alias>DISPLAY_AIRPORT_CITY_NAME_FULL</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_combinedatl.csv_4E4242A0F1B44EFAB333CDAE2EACF7E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LATITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LATITUDE]</local-name>
            <parent-name>[Airport_Master_data.csv]</parent-name>
            <remote-alias>LATITUDE</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_combinedatl.csv_4E4242A0F1B44EFAB333CDAE2EACF7E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>LONGITUDE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[LONGITUDE]</local-name>
            <parent-name>[Airport_Master_data.csv]</parent-name>
            <remote-alias>LONGITUDE</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clean_combinedatl.csv_4E4242A0F1B44EFAB333CDAE2EACF7E9]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[cnt:ARR_DEL15:qk]&quot;' value='Total Flights' />
          <alias key='&quot;[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[sum:ARR_DEL15:qk]&quot;' value='Delayed' />
        </aliases>
      </column>
      <column caption='Airport' datatype='string' name='[AIRPORT]' role='dimension' type='nominal' />
      <column caption='Arr Del15' datatype='real' name='[ARR_DEL15]' role='measure' type='quantitative' />
      <column caption='Arr Delay' datatype='real' name='[ARR_DELAY]' role='measure' type='quantitative' />
      <column caption='Arr Time' datatype='real' name='[ARR_TIME]' role='measure' type='quantitative' />
      <column caption='Crs Arr Time' datatype='integer' name='[CRS_ARR_TIME]' role='measure' type='quantitative' />
      <column caption='Crs Dep Time' datatype='integer' name='[CRS_DEP_TIME]' role='measure' type='quantitative' />
      <column caption='Origin Point' datatype='spatial' name='[Calculation_100486606526701568]' role='measure' type='nominal'>
        <calculation class='tableau' formula='MAKEPOINT([LATITUDE],[LONGITUDE])' />
      </column>
      <column caption='Destination Point' datatype='spatial' name='[Calculation_100486606526984193]' role='measure' type='nominal'>
        <calculation class='tableau' formula='MAKEPOINT(33.63666667, -84.42777778&#13;&#10;)' />
      </column>
      <column caption='Route' datatype='spatial' name='[Calculation_100486606527455234]' role='measure' type='nominal'>
        <calculation class='tableau' formula='MAKELINE([Calculation_100486606526701568],[Calculation_100486606526984193])' />
      </column>
      <column caption='Day Of Month' datatype='integer' name='[DAY_OF_MONTH]' role='dimension' type='quantitative' />
      <column caption='Day Of Week' datatype='integer' name='[DAY_OF_WEEK]' role='dimension' type='quantitative' />
      <column caption='Dep Del15' datatype='real' name='[DEP_DEL15]' role='measure' type='quantitative' />
      <column caption='Dep Delay' datatype='real' name='[DEP_DELAY]' role='measure' type='quantitative' />
      <column caption='Dep Time' datatype='real' name='[DEP_TIME]' role='measure' type='quantitative' />
      <column caption='Dest' datatype='string' name='[DEST]' role='dimension' type='nominal' />
      <column caption='Dest City Name' datatype='string' name='[DEST_CITY_NAME]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Display Airport City Name Full' datatype='string' name='[DISPLAY_AIRPORT_CITY_NAME_FULL]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Display Airport Name' datatype='string' name='[DISPLAY_AIRPORT_NAME]' role='dimension' type='nominal' />
      <column caption='Distance' datatype='real' name='[DISTANCE]' role='measure' type='quantitative' />
      <column caption='Fl Date' datatype='date' name='[FL_DATE]' role='dimension' type='ordinal' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Month' datatype='integer' name='[MONTH]' role='dimension' type='quantitative' />
      <column caption='Op Unique Carrier' datatype='string' name='[OP_UNIQUE_CARRIER]' role='dimension' type='nominal' />
      <column caption='Origin' datatype='string' name='[ORIGIN]' role='dimension' type='nominal' />
      <column caption='Origin City Name' datatype='string' name='[ORIGIN_CITY_NAME]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Quarter' datatype='integer' name='[QUARTER]' role='dimension' type='quantitative' />
      <column caption='Wheels Off' datatype='real' name='[WHEELS_OFF]' role='measure' type='quantitative' />
      <column caption='Wheels On' datatype='real' name='[WHEELS_ON]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='clean_combinedatl.csv' datatype='table' name='[__tableau_internal_object_id__].[clean_combinedatl.csv_4E4242A0F1B44EFAB333CDAE2EACF7E9]' role='measure' type='quantitative' />
      <column-instance column='[ARR_DEL15]' derivation='Count' name='[cnt:ARR_DEL15:qk]' pivot='key' type='quantitative' />
      <column-instance column='[ARR_DEL15]' derivation='Sum' name='[diff:sum:ARR_DEL15:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='RowInPane' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[ARR_DEL15]' derivation='Sum' name='[diff:sum:ARR_DEL15:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='Difference'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[FL_DATE]' derivation='Month' name='[mn:FL_DATE:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[ORIGIN_CITY_NAME]' derivation='None' name='[none:ORIGIN_CITY_NAME:nk]' pivot='key' type='nominal' />
      <column-instance column='[ARR_DEL15]' derivation='Sum' name='[sum:ARR_DEL15:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CRS_DEP_TIME]' derivation='Sum' name='[sum:CRS_DEP_TIME:qk]' pivot='key' type='quantitative' />
      <column-instance column='[FL_DATE]' derivation='Year' name='[yr:FL_DATE:ok]' pivot='key' type='ordinal' />
      <group caption='Top Ten Origin City' name='[Origin City Name Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[ORIGIN_CITY_NAME]' member='&quot;Austin, TX&quot;' />
          <groupfilter function='member' level='[ORIGIN_CITY_NAME]' member='&quot;Chicago, IL&quot;' />
          <groupfilter function='member' level='[ORIGIN_CITY_NAME]' member='&quot;Dallas/Fort Worth, TX&quot;' />
          <groupfilter function='member' level='[ORIGIN_CITY_NAME]' member='&quot;Fort Lauderdale, FL&quot;' />
          <groupfilter function='member' level='[ORIGIN_CITY_NAME]' member='&quot;Houston, TX&quot;' />
          <groupfilter function='member' level='[ORIGIN_CITY_NAME]' member='&quot;Miami, FL&quot;' />
          <groupfilter function='member' level='[ORIGIN_CITY_NAME]' member='&quot;New York, NY&quot;' />
          <groupfilter function='member' level='[ORIGIN_CITY_NAME]' member='&quot;Orlando, FL&quot;' />
          <groupfilter function='member' level='[ORIGIN_CITY_NAME]' member='&quot;Tampa, FL&quot;' />
          <groupfilter function='member' level='[ORIGIN_CITY_NAME]' member='&quot;Washington, DC&quot;' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[yr:FL_DATE:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2019</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2020</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:ORIGIN_CITY_NAME:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Allentown/Bethlehem/Easton, PA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Charlotte, NC&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eagle, CO&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hartford, CT&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Little Rock, AR&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palm Springs, CA&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rapid City, SD&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Bend, IN&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Austin, TX&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brunswick, GA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dallas, TX&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gainesville, FL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kalispell, MT&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Moline, IL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Peoria, IL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Juan, PR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cedar Rapids/Iowa City, IA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Denver, CO&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greensboro/High Point, NC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Houston, TX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lafayette, LA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Myrtle Beach, SC&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Portland, ME&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Scranton/Wilkes-Barre, PA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wilmington, NC&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Fort Lauderdale, FL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asheville, NC&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chattanooga, TN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Christiansted, VI&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indianapolis, IN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Manchester, NH&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oakland, CA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rochester, MN&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tallahassee, FL&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anchorage, AK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Charlottesville, VA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;El Paso, TX&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hayden, CO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Los Angeles, CA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Newark, NJ&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Reno, NV&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Springfield, MO&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Albany, NY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Charleston, SC&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Des Moines, IA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greer, SC&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Vegas, NV&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nashville, TN&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Portland, OR&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Seattle, WA&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Tampa, FL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bozeman, MT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Columbus, MS&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fort Smith, AR&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jacksonville, FL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Missoula, MT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Panama City, FL&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Francisco, CA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Akron, OH&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Buffalo, NY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fargo, ND&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grand Junction, CO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kansas City, MO&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monroe, LA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Philadelphia, PA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Santa Ana, CA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;West Palm Beach/Palm Beach, FL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bloomington/Normal, IL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Columbia, SC&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Huntsville, AL&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jackson, WY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Milwaukee, WI&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New York, NY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Antonio, TX&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tucson, AZ&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Albuquerque, NM&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Charleston/Dunbar, WV&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Detroit, MI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gulfport/Biloxi, MS&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lexington, KY&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Bern/Morehead/Beaufort, NC&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Providence, RI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Shreveport, LA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Baltimore, MD&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cincinnati, OH&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fayetteville, AR&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Melbourne, FL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Oklahoma City, OK&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rochester, NY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Valdosta, GA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Washington, DC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Aspen, CO&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Baton Rouge, LA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cleveland, OH&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fayetteville, NC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Memphis, TN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Omaha, NE&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sacramento, CA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Traverse City, MI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Boston, MA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Columbus, GA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fort Myers, FL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jackson/Vicksburg, MS&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Minneapolis, MN&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Diego, CA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tulsa, OK&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bristol/Johnson City/Kingsport, TN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Columbus, OH&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fort Wayne, IN&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jacksonville/Camp Lejeune, NC&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mobile, AL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pensacola, FL&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Jose, CA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Valparaiso, FL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Atlantic City, NJ&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dallas/Fort Worth, TX&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Elmira/Corning, NY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hilton Head, SC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Louisville, KY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Newport News/Williamsburg, VA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Richmond, VA&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St. Louis, MO&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Miami, FL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alexandria, LA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Charlotte Amalie, VI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dothan, AL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Harrisburg, PA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lincoln, NE&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Orleans, LA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Raleigh/Durham, NC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sioux Falls, SD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Burbank, CA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chicago, IL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dayton, OH&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grand Rapids, MI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Key West, FL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montgomery, AL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Phoenix, AZ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sarasota/Bradenton, FL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;White Plains, NY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Birmingham, AL&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Colorado Springs, CO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Flint, MI&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Islip, NY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ontario, CA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Salt Lake City, UT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trenton, NJ&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Appleton, WI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Augusta, GA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Evansville, IN&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Honolulu, HI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madison, WI&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Norfolk, VA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Roanoke, VA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Syracuse, NY&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Orlando, FL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albany, GA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burlington, VT&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Daytona Beach, FL&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Green Bay, WI&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Knoxville, TN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montrose/Delta, CO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pittsburgh, PA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Savannah, GA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wichita, KS&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[mn:FL_DATE:ok]' type='palette'>
            <map to='#499894'>
              <bucket>9</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>5</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>10</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>6</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>7</bucket>
            </map>
            <map to='#e15759'>
              <bucket>11</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>8</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>3</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>12</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>4</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[diff:sum:ARR_DEL15:qk:2]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[diff:sum:ARR_DEL15:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[sum:ARR_DEL15:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[sum:CRS_DEP_TIME:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[cnt:ARR_DEL15:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='clean_combinedatl.csv' id='clean_combinedatl.csv_4E4242A0F1B44EFAB333CDAE2EACF7E9'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[clean_combinedatl.csv].[ORIGIN]' />
                    <expression op='[Airport_Master_data.csv].[AIRPORT]' />
                  </expression>
                </clause>
                <relation connection='textscan.0ss063c0ulkwqf138g2zt0nsglhz' name='clean_combinedatl.csv' table='[clean_combinedatl#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='F1' ordinal='0' />
                    <column datatype='integer' name='YEAR' ordinal='1' />
                    <column datatype='integer' name='QUARTER' ordinal='2' />
                    <column datatype='integer' name='MONTH' ordinal='3' />
                    <column datatype='integer' name='DAY_OF_MONTH' ordinal='4' />
                    <column datatype='integer' name='DAY_OF_WEEK' ordinal='5' />
                    <column datatype='date' name='FL_DATE' ordinal='6' />
                    <column datatype='string' name='OP_UNIQUE_CARRIER' ordinal='7' />
                    <column datatype='string' name='ORIGIN' ordinal='8' />
                    <column datatype='string' name='ORIGIN_CITY_NAME' ordinal='9' />
                    <column datatype='string' name='DEST' ordinal='10' />
                    <column datatype='string' name='DEST_CITY_NAME' ordinal='11' />
                    <column datatype='integer' name='CRS_DEP_TIME' ordinal='12' />
                    <column datatype='real' name='DEP_TIME' ordinal='13' />
                    <column datatype='real' name='DEP_DELAY' ordinal='14' />
                    <column datatype='real' name='DEP_DEL15' ordinal='15' />
                    <column datatype='real' name='WHEELS_OFF' ordinal='16' />
                    <column datatype='real' name='WHEELS_ON' ordinal='17' />
                    <column datatype='integer' name='CRS_ARR_TIME' ordinal='18' />
                    <column datatype='real' name='ARR_TIME' ordinal='19' />
                    <column datatype='real' name='ARR_DELAY' ordinal='20' />
                    <column datatype='real' name='ARR_DEL15' ordinal='21' />
                    <column datatype='real' name='DISTANCE' ordinal='22' />
                  </columns>
                </relation>
                <relation connection='textscan.0b5dimp10gqvew19nkz8h0keid5f' name='Airport_Master_data.csv' table='[Airport_Master_data#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='string' name='AIRPORT' ordinal='0' />
                    <column datatype='string' name='DISPLAY_AIRPORT_NAME' ordinal='1' />
                    <column datatype='string' name='DISPLAY_AIRPORT_CITY_NAME_FULL' ordinal='2' />
                    <column datatype='real' name='LATITUDE' ordinal='3' />
                    <column datatype='real' name='LONGITUDE' ordinal='4' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Avg Delay'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Avg Arrival Delay By City</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_combinedatl.csv+ (Multiple Connections)' name='federated.0bom3vy1h8a8qp1b8ndui0v58ud2' />
          </datasources>
          <datasource-dependencies datasource='federated.0bom3vy1h8a8qp1b8ndui0v58ud2'>
            <column caption='Arr Delay' datatype='real' name='[ARR_DELAY]' role='measure' type='quantitative' />
            <column caption='Origin City Name' datatype='string' name='[ORIGIN_CITY_NAME]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[ARR_DELAY]' derivation='Avg' name='[avg:ARR_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ORIGIN_CITY_NAME]' derivation='None' name='[none:ORIGIN_CITY_NAME:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:ORIGIN_CITY_NAME:nk]</rows>
        <cols>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[avg:ARR_DELAY:qk]</cols>
      </table>
      <simple-id uuid='{A91748C6-F124-4983-BCDA-67459E140BE2}' />
    </worksheet>
    <worksheet name='Delay by Mth/Qtr'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Avg Delay by Month and Quarter</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_combinedatl.csv+ (Multiple Connections)' name='federated.0bom3vy1h8a8qp1b8ndui0v58ud2' />
          </datasources>
          <datasource-dependencies datasource='federated.0bom3vy1h8a8qp1b8ndui0v58ud2'>
            <column caption='Arr Delay' datatype='real' name='[ARR_DELAY]' role='measure' type='quantitative' />
            <column caption='Fl Date' datatype='date' name='[FL_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[ARR_DELAY]' derivation='Avg' name='[avg:ARR_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FL_DATE]' derivation='Month' name='[mn:FL_DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[FL_DATE]' derivation='Quarter' name='[qr:FL_DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[FL_DATE]' derivation='Year' name='[yr:FL_DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]'>
            <groupfilter function='level-members' level='[yr:FL_DATE:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[mn:FL_DATE:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[avg:ARR_DELAY:qk]</rows>
        <cols>([federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok] / ([federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok] / [federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[mn:FL_DATE:ok]))</cols>
      </table>
      <simple-id uuid='{5794473A-CA3F-4303-AEE3-FA1B442EC311}' />
    </worksheet>
    <worksheet name='Dep/Arr Corr'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Departure Delay/Arrival Delay Correlation</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_combinedatl.csv+ (Multiple Connections)' name='federated.0bom3vy1h8a8qp1b8ndui0v58ud2' />
          </datasources>
          <datasource-dependencies datasource='federated.0bom3vy1h8a8qp1b8ndui0v58ud2'>
            <column caption='Arr Delay' datatype='real' name='[ARR_DELAY]' role='measure' type='quantitative' />
            <column caption='Dep Delay' datatype='real' name='[DEP_DELAY]' role='measure' type='quantitative' />
            <column-instance column='[ARR_DELAY]' derivation='None' name='[none:ARR_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DEP_DELAY]' derivation='None' name='[none:DEP_DELAY:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:DEP_DELAY:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:DEP_DELAY:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:DEP_DELAY:qk]</rows>
        <cols>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:ARR_DELAY:qk]</cols>
      </table>
      <simple-id uuid='{00692E30-B685-4578-938B-AF0EFB68E443}' />
    </worksheet>
    <worksheet name='Distance/Delay'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Avg Delay in Relation to Distance</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_combinedatl.csv+ (Multiple Connections)' name='federated.0bom3vy1h8a8qp1b8ndui0v58ud2' />
          </datasources>
          <datasource-dependencies datasource='federated.0bom3vy1h8a8qp1b8ndui0v58ud2'>
            <column caption='Arr Delay' datatype='real' name='[ARR_DELAY]' role='measure' type='quantitative' />
            <column caption='Distance' datatype='real' name='[DISTANCE]' role='measure' type='quantitative' />
            <column caption='Fl Date' datatype='date' name='[FL_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[ARR_DELAY]' derivation='Avg' name='[avg:ARR_DELAY:qk]' pivot='key' type='quantitative' />
            <column-instance column='[DISTANCE]' derivation='None' name='[none:DISTANCE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FL_DATE]' derivation='Year' name='[yr:FL_DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]'>
            <groupfilter function='level-members' level='[yr:FL_DATE:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[avg:ARR_DELAY:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[avg:ARR_DELAY:qk]</rows>
        <cols>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:DISTANCE:qk]</cols>
      </table>
      <simple-id uuid='{22C6C47C-B309-44CC-B18D-6AE782415944}' />
    </worksheet>
    <worksheet name='Flights Delayed by Qtr'>
      <layout-options>
        <title>
          <formatted-text>
            <run>No. of Flights Delayed by Quarter</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_combinedatl.csv+ (Multiple Connections)' name='federated.0bom3vy1h8a8qp1b8ndui0v58ud2' />
          </datasources>
          <datasource-dependencies datasource='federated.0bom3vy1h8a8qp1b8ndui0v58ud2'>
            <column caption='Arr Del15' datatype='real' name='[ARR_DEL15]' role='measure' type='quantitative' />
            <column caption='Fl Date' datatype='date' name='[FL_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[ARR_DEL15]' derivation='Count' name='[cnt:ARR_DEL15:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FL_DATE]' derivation='Quarter' name='[qr:FL_DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ARR_DEL15]' derivation='Sum' name='[sum:ARR_DEL15:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FL_DATE]' derivation='Year' name='[yr:FL_DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[sum:ARR_DEL15:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[cnt:ARR_DEL15:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]'>
            <groupfilter function='level-members' level='[yr:FL_DATE:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[:Measure Names]</column>
            <column>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[:Measure Names]' value='93' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[Multiple Values]</rows>
        <cols>([federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok] / ([federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok] / [federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[:Measure Names]))</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</field>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok]</field>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[:Measure Names]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>2</value>
                <value>2020</value>
                <value>&quot;[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[sum:ARR_DEL15:qk]&quot;</value>
                <value>1228.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</field>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok]</field>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[:Measure Names]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1</value>
                <value>2020</value>
                <value>&quot;[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[sum:ARR_DEL15:qk]&quot;</value>
                <value>10100.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</field>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok]</field>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[:Measure Names]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>4</value>
                <value>2019</value>
                <value>&quot;[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[sum:ARR_DEL15:qk]&quot;</value>
                <value>12785.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</field>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok]</field>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[:Measure Names]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1</value>
                <value>2019</value>
                <value>&quot;[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[sum:ARR_DEL15:qk]&quot;</value>
                <value>12704.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</field>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok]</field>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[:Measure Names]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>3</value>
                <value>2019</value>
                <value>&quot;[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[sum:ARR_DEL15:qk]&quot;</value>
                <value>14281.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</field>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok]</field>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[:Measure Names]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>2</value>
                <value>2019</value>
                <value>&quot;[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[sum:ARR_DEL15:qk]&quot;</value>
                <value>16400.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</field>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok]</field>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[:Measure Names]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1</value>
                <value>2019</value>
                <value>&quot;[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[cnt:ARR_DEL15:qk]&quot;</value>
                <value>93301.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='7' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</field>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok]</field>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[:Measure Names]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>2</value>
                <value>2019</value>
                <value>&quot;[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[cnt:ARR_DEL15:qk]&quot;</value>
                <value>101593.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='8' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</field>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok]</field>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[:Measure Names]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>3</value>
                <value>2019</value>
                <value>&quot;[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[cnt:ARR_DEL15:qk]&quot;</value>
                <value>102836.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='9' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</field>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok]</field>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[:Measure Names]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>1</value>
                <value>2020</value>
                <value>&quot;[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[cnt:ARR_DEL15:qk]&quot;</value>
                <value>89996.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='10' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</field>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok]</field>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[:Measure Names]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>4</value>
                <value>2019</value>
                <value>&quot;[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[cnt:ARR_DEL15:qk]&quot;</value>
                <value>97939.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='11' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</field>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok]</field>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[:Measure Names]</field>
                  <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>2</value>
                <value>2020</value>
                <value>&quot;[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[cnt:ARR_DEL15:qk]&quot;</value>
                <value>27987.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{4A6A4FFC-D361-491E-966C-6AFC77501391}' />
    </worksheet>
    <worksheet name='Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Map View of Domestic Flights to Atlanta</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_combinedatl.csv+ (Multiple Connections)' name='federated.0bom3vy1h8a8qp1b8ndui0v58ud2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0bom3vy1h8a8qp1b8ndui0v58ud2'>
            <column caption='Arr Del15' datatype='real' name='[ARR_DEL15]' role='measure' type='quantitative' />
            <column caption='Origin Point' datatype='spatial' name='[Calculation_100486606526701568]' role='measure' type='nominal'>
              <calculation class='tableau' formula='MAKEPOINT([LATITUDE],[LONGITUDE])' />
            </column>
            <column caption='Destination Point' datatype='spatial' name='[Calculation_100486606526984193]' role='measure' type='nominal'>
              <calculation class='tableau' formula='MAKEPOINT(33.63666667, -84.42777778&#13;&#10;)' />
            </column>
            <column caption='Route' datatype='spatial' name='[Calculation_100486606527455234]' role='measure' type='nominal'>
              <calculation class='tableau' formula='MAKELINE([Calculation_100486606526701568],[Calculation_100486606526984193])' />
            </column>
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[LATITUDE]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[LONGITUDE]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Origin' datatype='string' name='[ORIGIN]' role='dimension' type='nominal' />
            <column caption='Origin City Name' datatype='string' name='[ORIGIN_CITY_NAME]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Year' datatype='integer' name='[YEAR]' role='dimension' type='quantitative' />
            <column-instance column='[YEAR]' derivation='Attribute' name='[attr:YEAR:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_100486606527455234]' derivation='Collect' name='[clct:Calculation_100486606527455234:nk]' pivot='key' type='nominal' />
            <column-instance column='[ORIGIN]' derivation='Count' name='[cnt:ORIGIN:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ORIGIN]' derivation='None' name='[none:ORIGIN:nk]' pivot='key' type='nominal' />
            <column-instance column='[ORIGIN_CITY_NAME]' derivation='None' name='[none:ORIGIN_CITY_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[YEAR]' derivation='None' name='[none:YEAR:ok]' pivot='key' type='ordinal' />
            <column-instance column='[ARR_DEL15]' derivation='Sum' name='[sum:ARR_DEL15:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:ORIGIN_CITY_NAME:nk]'>
            <groupfilter function='level-members' level='[none:ORIGIN_CITY_NAME:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:YEAR:ok]'>
            <groupfilter function='level-members' level='[none:YEAR:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:ORIGIN_CITY_NAME:nk]</column>
            <column>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:YEAR:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[Longitude (generated)]' field-type='quantitative' max='-7372690.2489306461' min='-13956124.866500821' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[Latitude (generated)]' field-type='quantitative' max='6370421.6668857569' min='2836490.7613624125' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:ORIGIN_CITY_NAME:nk]' />
              <text column='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:ORIGIN:nk]' />
              <lod column='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[clct:Calculation_100486606527455234:nk]' />
              <lod column='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[sum:ARR_DEL15:qk]' />
              <lod column='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[cnt:ORIGIN:ok]' />
              <lod column='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[attr:YEAR:qk]' />
              <geometry column='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[clct:Calculation_100486606527455234:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-color' value='#000000' />
                <format attr='mark-transparency' value='134' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[Latitude (generated)]</rows>
        <cols>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{71E78916-ABFF-4FA6-A2C6-0FBB0EE99827}' />
    </worksheet>
    <worksheet name='Quarterly Count'>
      <layout-options>
        <title>
          <formatted-text>
            <run>No. of Flights by Quarters</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_combinedatl.csv+ (Multiple Connections)' name='federated.0bom3vy1h8a8qp1b8ndui0v58ud2' />
          </datasources>
          <datasource-dependencies datasource='federated.0bom3vy1h8a8qp1b8ndui0v58ud2'>
            <column caption='Dest' datatype='string' name='[DEST]' role='dimension' type='nominal' />
            <column caption='Fl Date' datatype='date' name='[FL_DATE]' role='dimension' type='ordinal' />
            <column-instance column='[DEST]' derivation='Count' name='[cnt:DEST:qk]' pivot='key' type='quantitative' />
            <column-instance column='[FL_DATE]' derivation='Quarter' name='[qr:FL_DATE:ok]' pivot='key' type='ordinal' />
            <column-instance column='[FL_DATE]' derivation='Year' name='[yr:FL_DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[cnt:DEST:qk]</rows>
        <cols>([federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok] / [federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok])</cols>
      </table>
      <simple-id uuid='{17504F05-1A85-4897-9E6C-F9C798CE734D}' />
    </worksheet>
    <worksheet name='Top Ten'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top Ten Origin Cities</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='clean_combinedatl.csv+ (Multiple Connections)' name='federated.0bom3vy1h8a8qp1b8ndui0v58ud2' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0bom3vy1h8a8qp1b8ndui0v58ud2'>
            <column caption='Fl Date' datatype='date' name='[FL_DATE]' role='dimension' type='ordinal' />
            <column caption='Origin City Name' datatype='string' name='[ORIGIN_CITY_NAME]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column-instance column='[FL_DATE]' derivation='Count' name='[cnt:FL_DATE:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Origin City Name Set]' derivation='InOut' name='[io:Origin City Name Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[ORIGIN_CITY_NAME]' derivation='None' name='[none:ORIGIN_CITY_NAME:nk]' pivot='key' type='nominal' />
            <column-instance column='[FL_DATE]' derivation='Year' name='[yr:FL_DATE:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[io:Origin City Name Set:nk]'>
            <groupfilter function='member' level='[io:Origin City Name Set:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]'>
            <groupfilter function='level-members' level='[yr:FL_DATE:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:ORIGIN_CITY_NAME:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[cnt:FL_DATE:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[io:Origin City Name Set:nk]</column>
            <column>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:ORIGIN_CITY_NAME:nk]' value='106' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='true' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:ORIGIN_CITY_NAME:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[cnt:FL_DATE:qk]</rows>
        <cols>([federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[io:Origin City Name Set:nk] / [federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:ORIGIN_CITY_NAME:nk])</cols>
      </table>
      <simple-id uuid='{E763B716-5885-41EC-914C-14262A3AB493}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:YEAR:ok]' type='filter' />
            <card param='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:ORIGIN_CITY_NAME:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[attr:ARR_DEL15:qk]</field>
            <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[cnt:FL_DATE:qk]</field>
            <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:ARR_DEL15:ok]</field>
            <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:DEST:nk]</field>
            <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:ORIGIN:nk]</field>
            <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:ORIGIN_CITY_NAME:nk]</field>
            <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:YEAR:qk]</field>
            <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E36D5DE5-6EEA-4E4B-97FC-796008F977A3}' />
    </window>
    <window class='worksheet' name='Avg Delay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:ORIGIN_CITY_NAME:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4DF1CD9A-68C4-4A12-BCE7-1CD2EE9FD866}' />
    </window>
    <window class='worksheet' name='Quarterly Count'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:DEST:nk]</field>
            <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:QUARTER:qk]</field>
            <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:YEAR:qk]</field>
            <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok]</field>
            <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1069399C-58F8-4112-ABF8-98A781615803}' />
    </window>
    <window class='worksheet' name='Dep/Arr Corr'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:DEP_DELAY:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:ARR_DELAY:qk]</field>
            <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:DEP_DELAY:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2CEC16B3-CFC1-4CEB-A244-9159C5B30D9A}' />
    </window>
    <window class='worksheet' name='Distance/Delay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]' type='filter' />
            <card pane-specification-id='1' param='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[avg:ARR_DELAY:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[sum:ARR_DELAY:qk]</field>
            <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E42D073C-16CF-4363-BE0E-23C7289E99A5}' />
    </window>
    <window class='worksheet' name='Delay by Mth/Qtr'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[mn:FL_DATE:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[mn:FL_DATE:ok]</field>
            <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C2805881-83AD-4BE1-BE6D-BD913328F175}' />
    </window>
    <window class='worksheet' name='Flights Delayed by Qtr'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[:Measure Names]</field>
            <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6928E55E-1584-45C4-B596-E78E44F52B33}' />
    </window>
    <window class='worksheet' name='Top Ten'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:ORIGIN_CITY_NAME:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[io:Origin City Name Set:nk]</field>
            <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[mn:FL_DATE:ok]</field>
            <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:ORIGIN:nk]</field>
            <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:ORIGIN_CITY_NAME:nk]</field>
            <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[none:YEAR:qk]</field>
            <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[qr:FL_DATE:ok]</field>
            <field>[federated.0bom3vy1h8a8qp1b8ndui0v58ud2].[yr:FL_DATE:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{003C2165-9F43-4BE7-8239-58AB13A2435B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Avg Delay' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29WYxkV5rf97t7xI19j8jItbIWFslmL8Mmu6dnNNJoBoJgG4LhB7cFWI+W
      Hww/+GUs+NWAAD/bMCwM5Icx7IEhjCzIGlvwTGvU03s3d9aee0Rkxr5H3P1ePyRZJIdVxazK
      DGYweX8vhYy48cWJW+e75/zP953vCEEQBISEfE0RL7sBISGXSegAIV9rQgcI+VoTOkDI15rQ
      AUK+1nwlHCAIAhaxWLXIBbBFL6591e0vmrO2X15wOy6Ej3+MIAgXatfzPGR5MbdgkbYvwv5R
      a0R/Yjz1fd/zEaXFPR9Xczr5THJh9s96fxbqAKN2jeOpSC4qki2XkfisZwoC+D6IkogADDsn
      1DsDYokMUuBQyafozgNK2cXdqK8rf/bje/y7dw4u7fv/6IdvLNQBzspCHaA1nCMGYHgBH97p
      k1ZEZkoEbzzERSaiBDimxfY3vktchVZvxCsvv8zDBw+YjnpM+i20/NYimxjyNWdhY1zg2UzG
      E+z5hLEjEYvIeChc21oHTkeBaCzJerXAbDbFdn1Susqdu3fxBYVEOs/17WvIXwmVEvK8SKJ0
      2U0AQFiGVIjRYEAinUF8yhTf930ARPFivcF13YXN0xdp+yLs/+peg8PW6KnvB76PcMH3+9O8
      fiPPVrW4MPtnvT9L4QBfROgAV8/+3b0mlnu+rndzLUcsqj7xvbO2f0G/MODDt3/Nxiu/xaDV
      QJYliqUykiDg+QGSKOD5PqIoIggCQQCiKOA5Bvcf7BJNpNlcyfGb9x7y3de/uZgmhlwqf/pX
      93hvp3UuG//Df/kH3FrPn8vGQhzAsw2kSJzWSRPPMnAtg9ZJk0Ixx9tvv8/N6zdxBBdFFIkl
      0niBxOZqiVG3RbayxqDTpttqEtMVxoZDQluO+WLI1WMhk7zuyTGBEmE6GX30lAcEkeFozGo5
      h4vC5uYmiUyBk8N9SsUsk5lBPJ3l5HCf6WxGbzghqoi0W51FNDEkBFjQCFDauE7pDNdFZQlr
      ZQPJs/AlDTUS5Tvf+dbnrvtYA4RcHX7/Wxt8c7t8Lhv5dOzc7QhFcCiCv9D+3vGAwTOixi9C
      NRulXMhcqM1Pc+ki+N67v6Fy89uMOg0UWaZQKiGLIo7noUgSruchSdJHIjhAFEUcY8oHjw6p
      ZuPMPcjnsoynFpVidjHNDDkT/+Kv7vLTD2sXavOPfvjGQh3grCzEAXzXIlB02ifHBK7J3DHp
      tptk8gXee/ddbly/geUHqJJINJbAD0S21isEno+MQ6s7ZOulW3z49ru8/uabfBw4C7k6LEsg
      bCEieNA6IVCizGeTx0udfiAyGo9ZrRRxfZGNzXVi6Tyd+gHFYo7JdA4C5CurjHptJDlCvpBD
      kS42AS5kOfB877KbAFyyBvBci8Nai7WVPLYvPzWoEWqAy7X/q3sNGt3xhdr/znaBjZXzreE/
      izASfAZCB7gY+83+lFr76WkVT2KjGKeYTb1I087EhYvg+eCEh02DmyWNoSkQaCkqGZ2P5+dB
      4ON6PoosIwABAo7joCoyrucjigKu6yErMqIAQQCu46CoKoIgMBs22W+aJKICkmNAqowwPsaK
      FtkshyJ4mfnl3Qb//M/fea7P/NEP31ioA5yVMztAvTVE9gM8R8CyArq9CeO2gKJpeI6B7zgM
      5zbZVJycDrWBx0l9n821KpacIRKMmYxNYpkkG/k4u0ddGid1br72BtdXC3h+gG/P6TuQT0Qx
      xn0Ew0JQlmOuGHKxCCyHtjvTnCIIfEzTJCI6tIYmoijhOTZKJMKg22Qyt/B9D8dxEH2Hw3oL
      RdXY3LpONp1gc3MDfB/bcVDFgJ2DOpKiUt24Ri6hMp2bCIJAdXWNbruNKIgovokUTyM+LUU0
      5CvNIjNNn4cL1QCNRoNqtfrU95uNBoVqlU8vgJmzCYIWQ3tG4n+oAZbb/m6jz4f77eey/81r
      OTZXCi/StDMRiuAzEDrA5dl/f+cYw/4kxSWha7y8eXEO8eVEgoOAd3/9C258+026xzWq1RWC
      QHg8bfE9j0AQkURwXA9NVZgM+5iBQiahMzcMEjEd2/XQNA0BaNUOSK5sovlzfvXuA9787rfP
      1cSQ5eRf/PjBZ9KhX94s8E//i7/7pbfjXA7g2lOkaIzj+gm+bfDLn/x7ZkGU69UMnprAm7Q5
      6pmsFRJ4toeaSoJtEQgBtZpMVIN8XOXX797lb/3h3yehiTi2hR9A5+QEPSIznDukIssRNQy5
      epxrTtE5aaEnM1jGBEkSSaaz3NjeRJQUfNfCsHwSeoRYIs1KKUcQgG07CLLC5sYGqiwxnEwp
      FzNMx2MsxyPwPfZ2d+mM56QTOr12mA4dsjiWRgNMxiNiidQT9wWHGuDq2f/r9w4YTq3Hf2eT
      Oj/4xtqF2b/kbNDTwkSSdPapSyJ5+UGRkC+HewcdtitJVpYgy/czj9TANfjZL97C96YcHrY5
      ODzCtkxcz8OxLSzbpl47wrIdLPP0dc87Xf/3PA/XsTFNi8B32d97xNtvvcMH9x7iug6W7VCv
      1bDmEw7rJ9iOy8HBAd5H7zXqdQzDJPD903+XYlwKWQR/+qM7HDafL3ViUXxmBDg+OiIWVZjY
      Drbt4PsT/v2PPiCWr6JLHqIaxZqNiEZVao0esiKiSgLNdp/qSgljNsb2JbareZKZPN3eHtgO
      b//iJ/RNgWwiQiyq0Wm3mE0nSELA27/6Kb0prFVzjPodPEGiUW/w7e//HqW0fln3JWTBCEsS
      4PyUAwRMLYdcNkX7uIkophEEmVyhRGltBc+ygABbAdsNCFwbMZrEmXZYXy0zcRVS6RwAg5lD
      tRT/aMMLxFMZstUcojPFdFyK5RVwTWzbJp7MkKlkUCRIatAc2qxvbaNLHjNjDkhENeVSbk7I
      4liWba4XLoIDz6U7HFPIXdz8LhTBV8v+L+/WWclEWavkFmIfwkjwmQgd4PLsv/OgztxeXNfz
      fQ9RlMgmI9zeeHqE+XyBMGvKr9/f4Xuvv4ZpmChaBM+xcD2DwdCnVMrguzairCLg4/sBjuMQ
      ieo4loEgKQiBB6KMqpw2ZdA64ngM1bSEI0SwPFhZgr2jIRfLv/zpo3MXxjoLb9yu8t/95wty
      gONanagq0B+0OKqP0DUR27IoldN02xMm4w6O4yHIMu58xPrWNnffe4d4YQVFlPBck0G3gxBN
      83u//V0Amt0xnhfgRCK8f3jM3/7B64RLQiGL4hxzioC57ZLPpui2e6xUV4loKgQeng+VahU9
      ohF4DqIokStW0LDRsyVEwHUsHC8gk82xtbHGaDQi8GxcH6KKwMQWeOXGJvWTMBIcsjguRQP4
      nsve7g5qPMP6SgkCn/FkRjKZePL1oQa4cvZ/9sEhw5m9MPsfV7cuZWL81q2Vp14XiuDQAV7Y
      /t2DDr3xixXMul5JULlKhbEOd+9DNEu1kMa0XfSIytwwiagSjfaQUjaJqCg0anVW19axLBNd
      17FMA0nRTvcOmxNOhhad2j7Xb2zSH87QU3nyqTAgtoz8Xz+5zy/vNl7os//kH35voQ5wVi7G
      AQKf8cwiMDrYkx6SGGAaHlI8juj7uK7NX995j2S+QmDPETwXT5ZwbR/DNolGdG7d2EbWYhj9
      AyIRjf3DFiuVLI63HAGTkItlWQJhFzKncK0pghxFCnxsz2NuOkRUmdlsRjQaRVEUcoUi6+tr
      xKIqgiQxn85RtQilShVdUxgORyCI2JZBZX2TqWESVaQLn/aELAcXfeLni3LhGqDT6VAoFJj2
      O4jJAvoZxpjAc5iaDonYk6c6oQZYTvvvPDqhNZi9kP1XN7KslhaXDRpGgs9A6ACXZ/+t+3Wm
      1vlL3lyrpFkrfj6V/ksXwfsP76Aky5SyMWwX+t0WmWwePaoxMyyiEQ1JFJlNR1jGHDOQQVDI
      xFXUiI4sieDM+dk7D7i1nsMRo7RbbVbW1skmz18HPmS5+Fc/u5hI8D/6e998ogOclQtxgCDw
      mRgO2C2mHQv0LIExYtwf48surZMOxfIqqUQUw5gR1RMEItjGiLvvHZJf2eDbr96EwCepK9Sb
      XQRRY/vll4nJwtIIppCrx4XMKZz5EDmSRCIglcszGg6IpzIUc2kisTjV9S2ub63SaPXJJ6NI
      sowkSSiqRr5QYKWUYziagCCSypdxjQn5Yp6du3foDicX0cSQkCeyFBrAdUxsV0QPq0N/bez/
      7IMDpub5NcCN1Sxblc/HEy59T/DzICsR5HDPy9cKWRJRL6D3HTZHT9xe6X90DO8XtuP8TXg6
      o3aN/Z7DazfXmUwNdF3DMCwSiTjTyQQ9FsOYz1AjOqoiE/gud+/cJZ4pYE96WI5HZfMGmXhk
      kc0MuQT+71/sfinp0F/EQh2g3hrguz6t+gGNgUUiKhNVJY72d2h2B5RKZRAlNFXl5vUtnPmY
      aKbMxmqW+/dnvPJSmYf1Ppn405OZQkLOw8IcIPBdREmhEBMxBR3B7mFKcVzHJplK4YoaxXwW
      QdWxZkMGwxHpZILZ7h0O8RB9gzv3dylv3FhUE0NCvlwR/HGU+G/iuw6G7RHTnzzVCUXw1bP/
      qztHjA13YfbPqgGWYhXoiwgdYPH2f/rBEZbzyarMWTvQi/LSapqV4lcwHTrwXX7601/wve+/
      we7uIcWkgq1XUP05iWQSYzZFVjVqh4dUV8oEso5vz9HjCfrNOt3xnHKpgOfaTE2BaiWHJIAg
      yYiCwL333qK4dYtRt8dGJcNee8r22vlOFA/5Yv7437xD/wVz+1+Ef/KffW+hDnBWntsBJt0G
      kWiEWnvEeDwmH09hzSc8fPgh6WKZwA1QVYnpeEw+odKetRElnfVojP5kzsu3X6LX2GVoge0o
      HB4cIIkC61vbiAJEkxn6rQa+L52eO+aGRyRdRfxgOaL7zz3GdSc2W5sbeOaUiCLgBiLWbEIi
      m0cSoFgqE4/pRDUZx4doNIYxG+MFAZlElDt372N6kEimccwZ5XySkRkwHQ3xAVlRKaTjTE2b
      nb0Dstn0An52yGUjCsuR5n7pGqDbrKMmC4i+Qzwef+I1oQZYvP2vqwa4dAc4C6EDXC37w6nJ
      ZDpjrXz5leEutEe1a7vc3a3h2PbpqZGux2jYxzAtHMfFtm1mkzGz+ZwH9+9jmBb9fh/PP/VB
      15rx/vsfsHdYx7Om/OTnv2bpvTPkuTnpTWh0liPJ8QJdPKDZG2P7UHPnFFdzHDw6JpJOY06O
      0eIpfHvGdDSgtHaN6XSKMx9z54MPKF97lRtrRcb9DoXqOp2TY1r+DE0W6E8tMnqYKHTVCJbk
      0XZhI4DvOajRGMWkjo3I7u4RajTKbDzCQ2TSbzO3XHK5HOPxlKgm0+8PSGXz4JoMxzOS2QLt
      2gGu52G4Attbq4wH/YtqYsgSsSwz74VqAM+a82jvkFypSiGbfOp1jjXHEzUiypNPlAk1wNWy
      P5qZzObGQmu+LkU6tKTpvHT79hdep2g64STnavGXb+3jPWMn38vrlx8EgwU7wP7DOwixAiuF
      NJIo4AcwHk+wZwP8aB5d9tGjGnPTJZM+HSEaBw/YOeqzXi0Q0XV8KUolH54f9lXjn/3rtzDt
      p+f6/NEP31hoVYizsjgHCHwGEwPmTazpgGJCpjn2mVoWOc1H1cu02/XT8umBhJ5+GQ2orq0z
      daNsbJb4yx/9lN//g78TVoe+gixLIGxhrbCNCYlMkURUQxDh8LhDPJVGdk1UPclkPERVVRKp
      DNl0kvGgj+sDCKiKTKfZ5JvffJmTdiiCryLLsgq0NIGw6XRKLB7nSfXCQhH81bP/kw+O8P2n
      d63tcpxq6fIDYUuxJxh4ahpEyFeT3/nG+jPfv3fQovolteVZnMsBdh7cxfE84pkKuhKQSCY5
      OqphWRbrqysEchTXnCHJErIaBdcEOYIiBjiej2MaxJIZFFnEMyf8/L2HvPnaDX761j3ycRlB
      ViivXw/3BF9B3t3tcHuzdNnNOJ8DeJ6HazuAx/7OLlIsTVRVsG0bzxjRc6bYI4OZY5KIyji+
      CIGP7xiUinnuPDigUFnjGy9dgyAgIgkcNDpkMikUWeDm9ho7R+Ge4JDFca5JtaIoKKqKa0wQ
      Igk0WUaLRNBkAcs7fT9fyJPL54nHYgiejSAp5AplMukM2UyGcj5NfzgGUaS8UmYys0jqGp5t
      cP/hPoVi/qJ+a0jI57h0Eew5Fo4vEnnGYdihCL569nfqHa6vPv30xvPylRHBkqLx5ASIkKtM
      ezDnYf3RM68RBPj7by62KshzOoDPO795C9cTeeXbrzAdz9H8KSczha1ykrntE4sojCczcrkc
      j+5/iOcHJAurxGSfSDyJEARAgBB4DCcG2WyS4XBCLpdFAI4PdkivXkf1pvzsN3f53R+8sYjf
      HXLJ/L+/3vvCwlhL6ADgex4+MO52eHjvLmtb2yDr7O0dIBFQE0RyUZGOlsJzXSzXB2dCc+Tj
      t5tIQhRwIPDwLZdmq8aoP+L2t94kn4zgex4B0KzXUCWf3sQiGwszhUIWw3NPqhVVQVMUxnOD
      TCaNqieYjweosoDhQiqZIpfNnG5wT6TZWC3jBSL2fISixbCNEeO5hSwKDIYT4skk+eIKojPD
      cDxEUWB/d5e5r/DKSzeYDgeL+N0hIcAliuDWcY3B1OHWzWsIwHw2I6rHeNLRUaEIvnr233lQ
      Z24/u+sJAvz2q2svZH/pRXBpZY1Ph0H0WHgKzNeJiWEjy8oLd/CL4vkdwHf5zW/ewhNVbl7b
      QI/HsS0LIfCw3QA/AEkI0GMxxuMR2VyeQa9DNBKhftJhpVoFx8CXIqiix8x0CHyffD6PIEDg
      O/zkr3/O9373tzncq3H9+tYCfnbIZfMXbx9iO95X0AHgdKODAO1OB6XbIpYt02s1MEyTqJ5A
      EiHa7yDpOg/u3kHP5Om0GziInBzXwTE47s8pZxMYpkk2qTNO5klpMGwfI6sKjdYAzwuLYoUs
      lhdyAFVVCEQZVdNQFYVSPoNrzdEdB0VRcBwHTVFIZlN4ls2w1wVBIlfMg2sw6M6Ix3QSqTQR
      3SETUzDGA9R0konh843XXqXT6TId9Wh1cxSy4YaYkMWwcBHsWnN29g7JV9bIp5+e8Tmfz4lG
      9VAEf03sv/eogSQrvLpVXIj9JSuMFWDbDqr65DPAvojQAZbf/u7xgLv77TNf/63tAmvlyz8o
      +/EVJwe79C0HSVSRhYBKMYcrqERkn4npkYiqDEdTJMEnmUkynbrgGaixFDhzTFegfVyjvLaJ
      4BhEEhlcc4oTyCQicLCzwzBIko0GbG6s0hvOyKUSzEwTER/L8fH9gExSpzecUioWnjgahCwn
      H+61+Od//u6Zr/9vf/jmQh3grDx2gMD38T0PWZbwXJODWoMAAUkIUAk4FmRinoGYzTGuN3Ed
      cDwXpT/A88HzTjdAq5jUBwZ+t4fveCiaihnVKJYKWB2DwdTC390nrqvcq9eIldcwB01M0yQZ
      jeN6OrsPdpCi36eQDPcBXFWWZUvk4zmFrKpIkowkCkS0CBI+gSATUSSmDqSTSTKZDOlMBk1V
      0TSVfC5PPKYTuBbjqUlSjzCeu9jzIYqmk83lSMSi2L6IpihU19aw51NiUY3eaEY6m6FcyJFO
      Z8jl8qRTCQzDIpVM4ppzZsacmWFd5v0JWRCLLLz7PJxfAwQBh/u7BEqMzbXK5952bYO5Dcl4
      9IW/ItQAy2//pDfhqPX540qfxkYhRnkJCmNd+n6AsxA6wNWz/+N39xlMn390FwWB/+gHt77w
      uktLhajvPmTsuEhKnGIqghpPY0+HiGqEvZ0dbt5+mclwQL5QZDToosXSxHUNsPmrH/2K3/1b
      r/OXf/Vzfv93Xucnv77D7/3u9y66iSFLwF+8ffBC5wTLkngmBzgrFz4R8wMfz/Pw3TmtwZzD
      /R0OD4+YGRaKotBrHCEoIo8e7tAeTk8jwx+RS0XY2T0ilStwUjtCET26Y/OimxgS8pgLdwBV
      1ZAkBVWN4BojZFUnnU4ymxlIgo+karSbbRKpJLlcjpgeodvtAQK5cpXZ3KCcTeApOt/51jcw
      xsOLbmJIyGMuXQMEnovp+kS1pwfJQg1w9ex/sHOM6T5/1xMEgddvfXGVkKVPh/4YQZKJhpuC
      F8rbD084bD7fSOoHAeICI5HfuV7gGyuXX/HjQhzgw/fewvc8Vm68hj3uk89nOT5pki+WPhK8
      eXqdHrIqo+kJrOkANZZBcA1MFwq50+WwD976OeXtb1K//xtixQ3qB7u88tq3w2S4c/KTD474
      y7f2L7sZn6H0wzfYuCoO4PsBrhfQqR2QK+c5qLeQPYPG/g6D6ZzBqI+qJJj1R8QiQ6z5jLHV
      JKkryIr22AHimQKjTh1B1kim81SrJqV85vEUKOTqIInLMexfyKRa0zS0SIREPEbruIkiurQG
      M2KJBLFEknwuRyaTIpvNENUUPAT0aIRMJksiHqPX7eIDWkQHz6JYWUWRRSKRMBXiquL5y7HX
      49JFMIBhGESjT48UhyL4fPYPmkN6o/lz2fd8H2mB6QrVbPSrHwl2LAtR1ZAWnLUZOsDVs/9X
      b+/Rm5jkUzq/963NC7f/3KtAgW/yi5+/ixyN8o2Xb2KaFq7n4dkmWjTKo519Xn31FXq9AQXd
      p+mmYdZhfW2FDx/uU8mn0GIZTo52SeUrJKIy/fGcYiZBazChnEvS6k0oZpN0en3yxTLOtMej
      oxYrlTK+Z1Grtblx6wbJWATHC9DUsB7QVeVH7x7y3k6L2xv5hTjAWfnMIzXwfQRBZPfhfWRV
      o9ft0qjXsd2AWCxO/XCfWAQOGx18z0WQFATAtaZ0hyZHh/vYns9w0OXoqEYwH7FTP2Y8mrCz
      d4ASzLl39z6+KHHc6jHo9dm+/Qq5hMrEdIjF4tiTLnv7BxgvsEYcEvK8fOIAgogWUVFVhWyh
      TCyiEo1GSCaTGKaN7xhEIlGOT7qkMlnmgzbpfJG93R0K5TVcY4SiRclmcyTicZLpDIlE4jS1
      2ZoTjUZo9yZkcznSqQRRTaFYqbB//w690ZxoRMd35iRyJXqDETHRDdOhQxbOC2uAwWBAJnPx
      ImY+GTB1JIqfOlc41ABXz/7dvSaWFxCLqNxcu/ijkhYeCV5E5wfQExn0hVgOuWz+7Mf38D46
      N+z163leXl3Mhvjn4Vwu/uj+HTw/QIllySc1PFElpatYjsdgMCRXKNJrH5NMZdEiKrbtIeEy
      szwk38LxfDxRIxXX0aMRbGPMnQcHpDJZ1ktJfvzLO/yd3/v+Rf3WkEvmf/+LD3BOjwJlPf99
      tlYvuUGcNxIcBLiugybA7mEDPaoRyenst0bEsxWODveZjscQ+HT7Y5BkkrqGaTsIssZKVudX
      77zPb//u7wAwHfYpr23QrB1xbA2QBYf2yKSQeLFqEiHLy7IEws41qdYiEWRFQ5ZEqtUVElGF
      vXqLWCxOOpUgFo8R16OgxPB8SCg+2XyJWDxBYM2YmR4v3bpGv9OmN5yQypfoNg6RFAUiSX77
      e69jT8++zS4k5HlZikiwa5sEkobylIhaKIKvhv33d1t83N2quRj5TOJC7X+ar0w6NICshjk/
      V4U/+/G9x/P8Z5GMiAt1gLNy4Q7gWgZvvfseohLllZduIAvQbOxxpzZCmvd5+Ttv4rkucdHE
      T1Qxhy0qq2vIooA9G/GL9x9wrZjGRCSRSGC5IqvlxZ0oHnKx/J8/uoNhu1943Vr+DbaWYBVo
      IdlOQRAgihK1Wo3uSY1AifKd73yXG7dfQQ1MWrUdOhOb5uEe0VSCvb3aRx8UKGXinHRHVNY3
      Odg/ZLVy+TnjIRePJF2hdOhPI4giEU1F1VQ0GZq9MZFIFFURiUSj2I5LNBZH0zRy+QwntQbx
      eIRuf4QgSeTKqyiijyTKVCrlhe5KCrk8lqX0/VKI4I+bIDyls4ci+Ktj/6zdybZtNE17bvtn
      5VJE8HjQpdUbs7m19ZkVndNVngjKE0Y90zQ/s/HFNqacdMesr5UZ9Edks4vLGQ+5eD79EKu3
      x/zP/+o3T7zuP/3bN3ntxuVHwi7UAfqjKdV8nJ29A8rFAp5jYEzHuNacnqWwvblGv1Unkckz
      7LbR4hkC10DXYxSKRQQCHu7sc+PmTYxxnzv39/n+915fjFAJWThzy+HDp5RM/w/e3PxyG/MU
      LrRv2caUequPKrkMRlN6vS4z0yObSnBte4tm4xDTcqnXDlH1NIFrMmg3GM09Tp8bPpKsoqoq
      jVqdiOxy3J1cZBNDloQrKYLT6TR+EJDJlXHmfTQ9SblcQoulODnco1JdQ5Ylcvki6VScdDrN
      1s1XSUUFjmp1QKKQjfNo94BUaZXvfvcNYtJyiKWQ5+dZ6xehCH4OQhF89ezP53N0fXF5v1+K
      CJ6Oehy3B2xsbaHJnwxpnmthOQEgoEc/q/SDIHjqag8EzOcGUU2l1W4xGk9J54phXaAryJ/+
      uwc8avQX9wVB8Owh6CPO5QCd/pj1cpadnT0qpTK+Z2JMx4gi2GKClK5wdLBDLFVAcKZM7YB+
      s861W68wH/XQEjnsaQ9XjHDj2gYgUK/XKSQjSHoBxtOwLtAV5aA15O5B57KbcT4N4NkGtWYX
      VfYZjCb0er2PRK+O55gM+kOiyTyeOcTyZATfJVcsk40rCJE001EfQdZQxE9mYamozF57Ri71
      4gdqhISclXONAJl0mu5gTL5UoddqoMVSpBNxZE0im/EQ/ABRUQg8lU7zmGZvwms3N+nNXLBG
      JNI5dO106lSv1aiurZEvrWDQRwTy+TAN4qoiCgKiePlR/i/tmNRu6wQxkiCbev4MwFAEXz37
      SyeCg8Dn6OCAYnWdqCp//CKGaX6uapsxHVI76bKxdQ1N/mynnE6nxONxPNfCDWQ0RQIEJDWC
      Kn/x2q/vORwd1VlZ20CVwxDYVeVP/r877DWfvdlJBP7pP/6DhbbjsQPsP3pAYe0agjPn/l6D
      8soqzfoRvhQhpvjIeprAHBNJlzBbLSrXNtjfOyCq+EiRFO58gCNEyCR1cEx2D+6zPPYAABKv
      SURBVPdIpKtY9pztrU3G0xnmvEcsImGjkoxFMKYTkpk0lu3S6w+4fv0G+w8fsrp1HVFY+tXZ
      kHPQ6E25f9h95jVfRh7k40es44GuqXQbdaxAoP7wPsXtW0QUmM7m1Bt1pqZLPh0nCFx+88tf
      kisUmc3mNBp1kFQEz6Lb69HqDbmxtQ6+T+C5dJpN0rkCBA4zC3xzxmDQYzIZcv9RDducMR90
      GMxsfE6zSRdZlzIk5GMejwDb1zZ4+OA+lcoKk5MTytdv0NrbIZ3L4zsOeipOJnk6f08Vyvzg
      5i16rR6aqhJJxBl2G6RL62SiKorgc9Tskc3kcFyDme1S1VXcQhlrPsYmQTGhMGOF+GRCVBOI
      pbPENInk+goP7j+kWq0gKTIgEdXCEolXDVkUkaVnP+S+jFT4CxPBfzOr8zFBgGnZRCIvnvoa
      iuCrZ9+yrK9+OrRrmxzVTyiWysRjn1+3n81mxGKxz3T+wPdBEJ86v7OMKfWTLhsb67SPa8Sz
      ReLRxd2okLPzJ//2PT7Ye3J25/PyD//uS3zr5tqF2DoP53KAh4922L5xg4PdXYIAVtZWOa43
      KK6U6Zx0cXyPjZUCjWaPfC5FfzTHHp4gF7bQ/RmepCP7BlMr4Nat64jA7qMdKhvbdOp7CIkS
      EXVxT6GQ5+O4O+FBrXchtuamcyF2zsu55hSCIKIqKmpEZ3Mtx3Gji+PY1BtHqHoGRRI4PDjA
      9x3mho3nmMRSOaqlDIanYBsTPCTSmoz9kc2bt2/TPNqh3Z8SjUZQFjgMh1wey3JE0rl611q1
      xIOHj8gVSsiaTD4r0hu4pLNpYnoC2xJRxRz19pCYHsG0bIrlHJ3OgLji4+lpUrEIEtCp16is
      rDHsdRG1OLdurlM73MUrrp4urYZcOrIsnSmWcxaCYDnyu8J06FAEX4r9pYsEA5jzCcedEeVC
      9omN+zjK+2l8339yxwwCut0W/f6Yyto6Cf2zK0SuY+Ejoz5po3DIled/+4t7PKxfjJ54Es9O
      u/+ETxwgCNjZPeDmrVvsPbyHJ2isr5eo15pUV4o0OlPwTSr5DM3umEwywswOaNX22bhxG2PU
      RUvkced9zEDl2kqG8XSKqmc53NulVCqiiTCzHYbDEemUTuNkxMbWBtNBGzWewZ31SeSqZFOx
      hd2YkOWg3h3zqL7A/QBn5DOPblGSkGWZSDxFMRahPZ7gzXvUGk3iuQoicHCwj+fMMV0wTYts
      oUQhpSKoaWbjPkgaEVmg3RlRKqQQBAFFken3+4wHPYZTm7W1CtPZnI2ta/SaDWZzg0a9gekE
      YecP+VL5ZAQQBCrFLI/2jyjnMyiA4Fn4iTyZXJ5oXCVGATGXpj2coWsyjqtRTEXojBxEf0oq
      WyCqShB4DMdzNFVnOjykuFIFe0p3MKFYzqCqGvl8gWazzsraOp3mMclsglRcZ9hpIsVzRAQH
      O4AwEnw1UWVpKZa4FyKCA9/D8XxU5WI6biiCr579pRTBHxMEPrXDAzLZPHIkTlT9bMfzbQMz
      UNA1GYIAPwgQgEAQEAUBQZRQRQnXmjE2ecq0xmc6NYDgs8I68JnOTKKaxNy0UbRomBa9ZPyv
      /8+7fLDbOpeNf/SHL/OtW5e/vP1EB6jv7ZAsr6MYLX7zqMb19QrGqIOWyGJPBkQUmMlZrGGL
      dCbFvfu7rOWjjKQia2mRqSNwfXON4/oxE09AsuPU2l1EUaJQrDDqnZDMFRh0x2QycSbDLoYn
      c21jFQSB4+M6CU0iUFSwAsrZ+JOaGXJJNPtTdo8H57JhOssRB3jio9XxfDRVQZIlNja3mU96
      TKYm9XodyxPIJHRGrQaFzRtMxlNWV1cpF/NUq2UODg4xDAMCn1anw6DVYjQ2KK9kSaZyDPpt
      5qZDvX4MwGDQ5WC/dvoZAAR0RaQz80ho4RLpVcVfkiOSnjgCbF67xs7uIwr5HOmYjC/n8d02
      mXiKZExH1gSu3cjQru9Rqq4z7p4gxgvMO222tjaZuyKB73P99qvEVIHB2CYW1dAUkVhUptPp
      Ek+liaoaQeCRisUwUajVaqytrVGqVBCHBpoeQSA8H2zZ0BQJ/ZwLE8uy3yOMBIci+FLsPzV9
      /oL4UqtDm/MJx60BxVKe+BdEkAPfJ0AgCPzP14f0Xdr9MamYhqBEaDeOSOTKJPQwHfqq8cd/
      /h47jVMdcW0lw3/9n7x5Ke24AAcI2N075ObNW+ztPcD3xNO06EaDUrlIuzXACzxW8klOuiMi
      mHSdGNagzq1XXmPc75DIlinl0+Ca3H/wkM2VHIYdkCpWzz3Uhiwn7eGc/ZMhwKXGeS5kTiGI
      IpIsoUbibFaS1Jt9HGtGvV4nli4iix9VkSulsDyZ1dVViuUVYrJDqzfDMOaPbVWrKzTqdTzX
      Q1UVpC/YNhcSch4uYAQQWC0X2Nk9pFDKoagipaxFX3DIZDLE4jpxrYgi+jTaQ65d36Z20iGf
      STL3NCr5BBFV4KTVp5JPUMjniSmQypc5PjqA4grpxOWvF4dcLBFVJh49XeCIapcXEQ5FcCiC
      L8W+YRifqzd1kZy1/V/QowKGvTa1kzaz2eyJV0wmnxxgcVrzPXhm7XfXNpjNZ8xmc6Yz42+8
      Z2JYDvPpBNf3aLUuv3hqyMXz3/yP/5aHtcvPBIUvmAIFvkOjOeDmzWvc+/A9ZD3DSj7BcXtI
      Pp/CMBxMY0Y8qjC1BQbtOtW1DR4+3OHb3/omrXabbDZDbzAmk0qRycQY9IYIkoBp+jh+gOgZ
      6KkClWIWUQio10/ANVkpptk9qJEt5AnDYVeLw9aImWlddjOALxgBgiBAlCQkSSKZyaNrEqPR
      iFGzTqM3ZqVaBQKmhovm2ei5Iqurq1Srq0w6x9i+j2mYBL6L4Nu898EjJMFjbp0epGzNh5x0
      hhjm6UggKlECawyyRqN+jCa5HLefXT4v5KvJWTarfBk8cwQQJZVcUqN23CabzQLgmDNyK6tk
      SiUUSaBYLOFZc6aOwHYywnG7T0JXiSWLmK3W6WnvjkumWMFFIp1OoHkgBALpTIpYt4UeUWic
      tKhWShQLBUQ9jWcluZlOMhhNv5QbEfLlkdBVlAvaW3xeQhEciuBLsb/U6dBPw5yNaXwU8U3E
      PklxDgIf3w8IguBcN802Juzu14gmM0QVkXw2jelebqAkZDH88Z+/z8Nzbon8Bz+4xR9+d/tc
      Np6jtwbs7h9x89Yt9ncfUvcCVtbWOW7Uiesae7UeMhab12/hzseIkQTWpIcnRcnEFLqjOeV8
      mpN2j+pKmePGMalcEXPSQ08XqRSyqNEEUUmivFrh3q9+iuus44hR1svZc/3IkOWjOzaotcfn
      sjGen19IP9ecQhBERFFEicTYXslweNzDseeMDY9qtUq+UKScTzOeTKjXG8iajiYLDMYzyimF
      ewctrq0VeXD3AdXNdfr9DtOZTaPe+Nx3ZQoVBu1jln5+FvKV5jlGAIH1aondvSOKpRySJlEt
      WPQHHrl8iVGvTbFU4KQzJB6Pky4kScU/CnS4Fu3hnG/f3qDWaPPyKze5+957xAtVooqLHos9
      FsG5UgkFyOby5NNxbDncJH8ViUdUUrHzJTlqyvk1yqWIYN9z6PaG5PJ5pDOcExWK4Ktn/0ql
      Qz+JYa/N2PTJpRPEYjGM6RQ1HkcCREmhWCw89bO+azOzXALPI5l8/jPFQpaf/+Vfv8ODC6oL
      9B//zksvLIYX4gCBZ9NoD7l14xr377yPoMYpZFMo9px2d0o2HaE7NChldBqtLpVyhVarRWVt
      i2xSJ3AMWr0pnmGEDnBF6U1MGp3JF194BiaG/cUXPYWF5Bp/XJZOEATiqSypqMpgOKTZG7K9
      vcFoOKJTr3MymrGSjXN0dMLa9ibddpj7E/LlspARQJQ1ipkYteMWuVwOAYh7HpoqcXhYJ5FI
      sLIeIRYV+PDBLre/9V1aRw0K+Qzt/oR8MkohK9M9ntDqDihkU4toZsglEo8oZBIXowHOU2Dr
      UiPBtjlnYjhkMymeJYVDEXz17C9LOvRz/ULHnHFQb1IsFEmkEo/nT5/e83v6xRLT6Zx4/MlL
      mB83To3o5CJ/w0bgM57M0SMyM8NCiehEwgrSV45/9m/e5/7h4qa8ATzzofoxz+UAu3sHbN+8
      xfH+LvVjj2IhT6s1IJVJMR8PGNvQaxywev0WUgDDXgtHiIA9Zu7JZGMypi9zcrjLtVsvMx8P
      UGNpnNmQ7tjgu9/5JggCzeYxcU1CUDUCRwgLY11BeuM5x73LT3R8rjlFwGkaqyipXNteZ9xv
      k8iWmU9GiJKEMZuRyp/m9o+GA4ajMfV6HUGOENNkJFFiNp+TK5TIxlXqzS7WbIQr6WRTH3dy
      gZgq0p65xNVwP3DIYnmuEeDa5jp7e3sU8iUUSaNQqiKpOq5eBs8mFo9TzsQ4aQ8ol8uMhj2S
      OZ1M8nQq5FozEnGZbEyhP/PYWi2jJbK48yGuGPtUYawV5LFJJBZBXFyoIuQSSURVcsnFaYCz
      EqZDhyL4UuwvSzr0+XpUENA+rnPS7jGdfn4+96TXPvmoj+O6zKdTPi6T6tomO48eMZ6ZjMdj
      PMdiOjfP1cSQ5WQZToeBc8YBHHPEwIDtjRTdbpf2cQ0zUMgnI0xt0DWZfueEydwjk4kxGo6p
      rKxyctwgHtPYqXW5ubVO+aMVpIO9farXrrO3s4PvWhQyCeZiis1KmA591bDdJa4OfXZOF5sE
      QWA0GiGqUXRNZjiesbFaYTQa4QsKuViEke2xuVGiVT/BtOYMZw7VahVzOn6c8vyZpasgeDz1
      Cbl6BEvyf3uuEUCJpElFJrS6Q8rl8uM5uug71E/aj1+TgQigqArlqkinp5ArFBkPuiQKJbrH
      dTLFFbaubbJ/uM/q+iZ4NnFdY74cB4qHXDDaEhyPBKEIDkXwJdn/SkaCn/hFtsHBYYNiKY8c
      SaI/ae3e9xjNDFKJzwe0zNkUKRpHEU9F8MHhEcWVdQLXIq5HMJwAPRKeEbAs/Ojtff6Pv/jw
      3Hb+8X/4Gq+/vHEBLTof53aA3d19tm7cZNY+ZDj3mQ9bxHWdRK7IfNRnMh6TymQYTk0GnRNE
      LYk57uDLMdK6RL3W4KXXv48inorg1WvX2d3ZwXcs8uk4hpwORfASMTcd2sMnVwl8HlxvOSYe
      Fzqn6B3XmNgegqKy88E7WMaU1sjEtmx812E0nlBv1FGjcSKKwGRusVp++sYYlqR4UsjFsxzd
      /wJGgO3tLfb39ymXCtx8qcpJo0YqnUUSBErFPAEHJFIZkumAQVekGE+R0E8z4FxrTn80x2vV
      UUorbF7b4uBwn7WNrc9MgUKWBz2iUMqcf5+2Ii3Hwy0UwaEIvhT7y7In+G/0qIBe+4TDRvPx
      K6PRs2tzGpMJ7qf+NmdjHj58hGG7n7nONmdnCH4EdJp16idtRr02j3b3cf2l98+QF+B/+lfv
      8C9/fO+ym/HZKVDguzS7E166tc3B7kPMQEHwbBxzSqs7JJ/JMrBs0qrA2PRJRkSO9hus3d6m
      3+ywtnWDbqOOHs8T2GM+uH9Crphn0O2QSSeRFZVWZ0CxXGLQaSJpUQJrTqa0SiGbwjWn9KYe
      N7Yy3L+/w/ZagYN6m2urz9AJIV9JRjOTmXn5QZ7PzymCgCDwMd0A3NPKW73BhM1KitpRm8ra
      KoP+gFqt/ljEtnsDrm2s0O32qK5fQ3RGHNZPyFfWmA66aLEUsm8wm5usbmwy6DWJpYo45hxZ
      UZhMpp/6+tMSix+3I9TBIYvkMyOAIMpUikmOW30KmSSmL5PQNVQxoN4e8vIr26iySCabIZou
      kIkp9AYzbq5XqNdbbG5tYk0GzByRlWKaB/tHvHL7+mnNUBz0QETRFKora9y/8x5CNEMyphCJ
      Rz4qjFWkkBjT7I5YqxZp9GZsba6zPGsGIRdFJh4hoV9+fGdhIjjwPXzEJxa+CoKA6WRMRI+f
      qUx2KIKvnv1lSYe+sF846nfojk22N9cAmIwnxNPpJ1wZMJ3OSCRTTKdTlPhno8PTUZ/jdp+N
      jXVOakekCpVPSiyGfGXZbfT57//krx///V/9g2/zW7fXL7FFp1yMAwQe9WaPl27doHG0x2jm
      oAgwNwyS2SSD3oBeq08gCaQyGfrNBrFMiWRMw7VmHLcG3Lz9ErIAx40G8VyF3vEh8eIaST0s
      jX4VcD2f/viTM+Fs9+nnyH2ZXNicIgh8/CBgMrdJawFTB+aTMXNjxnA8oVgsE4mnwLPI5MsE
      7umml36vT79dZ/ZRpev1rW3sUYvOcI7v+3wFwhQhL8Cy/L9ezAggSGxUS9QaTVZKeQYzhxv5
      GLIiUD/uUF1ZQZM1dD+G+NHJk3qhTFQR8WwDQY0ybNeIra5hGTNcOcYrr67SqB0yFSskY4sL
      mIR8OaiKxEr+kzKXUe3yBTCEkeBQBF+S/WVJh/7/ARm5BGrh9nMwAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Delay by Mth/Qtr' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dep/Arr Corr' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Distance/Delay' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO292Y8s153n9zlLRGRm1d0vd4mbSIoSpZZa6jba3eMx3OOxBzNoL3B7Xtxo
      eHnwiwH/D/4z7Cc/GzBsA/YI1sx4xpDVy7SohdpIXfKSlzvvXktmRsQ55+eHE5mVS+RWzKzK
      qoovQOJW5IkTJ5bf+e2/nxIRoUGDCwq9jklEhHXS0apzrTJ+U2PP6tyrvrvzto61EMCiiwDk
      eb70XN77la69yvhNjT3Lc4cQTn0dq6xhnetYGwE0aHAWcWIEsOqu1KDBScCuMliC591b75B0
      rmF8l36wvPLS85taW4MGG8dKBKC0YbfT5v7hIarYx7SvEkQI3iMiC+U459xS1wkhLD121fGb
      GnvW515Wqdzks15FsV3XOlYigBBKdq8+wSd33+Hll17mszsfUCpFagwigtazJaqiKLB2ucs5
      55Yeu+r4TY09q3OLCEopjDGnug7vPVprlFInuo6VdAClDI8f3OWlr72GCgXXn3uebJUJGjTY
      MqwmAinNc8+/WP21s9KFlt1hGjQ4STRWoAYXGo0f4ITQRJxsJ06MAC6yCNTNC/6n/+OvT3sZ
      DWrQiEAngG6v4N/89sPTXkaDGjQi0AmgcJ5eXp72MhrUoBGBTgDdfkleLO+YanByaESgE0A3
      L8nLhgC2EY0IdAI47BWEIITQWIK2DY0IdAI47BcxVkpWi3lvsHk0ItAJ4LBf4ELA+YYAtg2N
      CHQC6OVlFS3biEDbhhMjgHmRoucdAxOobwhg63BiX+WqOZ/nCQe9glZqL/Qz2FaslhEmgY8+
      eJ/2lZtkquSwVDz9xPVNre3coFeUXOq0GhFoC7ESAQBcvX6d2x/cIU0SLEJ58xqmKmkxt/yE
      1me2bMiXXUcvd1zeyXATWU/bcI+yxLs7yXWsgnWsY0UCUPS7XdAaYywJgQDoavHzWLxzjiRJ
      lrpKCGHpzKBVx29q7LzxpfN0sgTn/PAZbcs9yhLv7qTWcRrvcUURyPF4b59r12/SViUHTpMp
      hVS7+zxF1xiztC9ARFbyG6wyflNj5433QdhtZ4SR37fpHkMIW/H8VkmJXNc6ViIArRNeee3r
      w79vrnDuKrvdeYPzgaudlKK8uL6QbUVjBToB+BDYaaUUriGAbcOJEcBF5QAhCEGgnSW4C+wN
      31Y0BLBhlN5jjSZLLGUjAm0dGhFowyidp5VaEmuaWKAtRMMBNozSBRJraaW2yQnYQjQEsGGU
      3pMmhjSxlI0SvHVoRKANo1+4SgTSjRK8hWg4wIbRLxztLMGaRgfYRjQEsGF0+yU7rZRWaika
      HWDr0IhAG0Y3L9lpp40VaEvRcIANo5uX7GQJiTWUjQ6wdWgIYMPo5SWdVkJqDa6xAm0dGhFo
      w+iXjSNsm7FiOLTw6cd3sO0rUByw1w9L9wi7yBygnSUkiWnMoFuI1RJiRLh89Tof3PmIsrfP
      jWdeHMsoWrTLL8sFVknQWHX8psbOGt/LS9qpJTGaciQhZlvucZNzrzp2laywda1jxYww4eM7
      d3jx5VdJNNx++22KZ57ALrFwXzXSW/pKW5AuuI519ApHO03QGrzfvpTIwdjTfn5nIiVSxBEE
      7t9/QCI56dUbTUbYgvEuBLLUQvUCtjEjbHRdp7UOOAsZYSbjG2+8scopQ1xUHcD5QGINIXhC
      0yVm69BYgTYM54XEaIxarSpGg5PBymVRjouLygF8CFgTP35p6gJtHRpH2AYhIvggWKPRWuGP
      yQX/1x+93fgQNoRGBNognA9YY2Indq2PrQP85HefcdBvWixtAg0H2CDKSgEGMFodWwdw3rPf
      Lda5tGPhPOowDQFsEM4HUhsf8aA05HE+otIHulvQZO/NW5/z5rtfnPYy1ooTU4IvrAhkj+zP
      1kQxyKy4GTjn2e+dPge4+7h77nSRhgNsEEXpaSVHBGC0PlaF6NIHuv3TJwB3Dtu9NgSwQeSl
      J0uPCgJrrY6lCPsgHPTydS7tWHA+NARwXFxEEahXlHSyIynTaHUsDuCCsH/YX+fSjoXSB/pF
      QwDHwkXkAN3c0cnS4d/G6JU7RYYgtBLbiEAbwsVt3HUC6JeO9gQHWNUb7ENgt5OSb8HO64Jv
      OMBxcR5tyIvQq2oCDXAcZ5jzwpWdFr18GzhAIN+CdawTKxKAcHiwR69fUOQ9DrvLy6UXUQQq
      Sk87/XI6gAuBnXZC6dypbyLOnz8OsFo+QAg8frzHvQd3SDR4D9/4vW81ctQM9Es3RgDWmpXj
      gZwPJMZgoIorOr2NRCTg3PmqbbSaI0xp8t4hz3zlKzy+/5BLeAoRkirba1GPsGUfXgirPehV
      xm9qbN34Xu5IjR4eM1pRFCXOuaXnzosSqxVaCWVZgixOAjnOupfhLiEEjI5rMnoxIa76rFfh
      cOt6jysRQPB9Hu11Me0+rUQ4LA3PKQXGLMwIs9Zi7XKXc84tPXbV8ZsaWze+8IFOOx0ey5KE
      QHwWS8+tNEliMBqU0kuds8q6RSQG6y2TXSXQSS1BIFvzOrz3K2WEres9rkQAxrb5/e/9/tTx
      i6feLofCebKRUIjkGLWBBvkEnVZCNy9oZct12twEggTamaV0sd7peUBjBdognI+5AAPE2kDz
      CeD/eevjsV5ig4yyS+2MgxWMDptACIF2as5VmfcTI4B54tF5xSAZZgBrNH6BFegn796jKI90
      qUFI9aVOxuEph0OIyLkr8nti0aAXkQP4EEgmOIBfwAGUAkbEYO8rEchkHPZOnwPstlvnqtNN
      QwAbwmg65ADLlEd0IeD90bMqq5yC3SSj1z89DhBEUAi77ZTeFoRlrAuNCLQh+CBoM27VsGYx
      B4DxiNFBWZWddrqS43HdEBGMVrTShLw8P86whgNsCD4E7ATRW2PwYT4BTAbLDTlAJ6HbP00C
      AK2gkyX0z1E4RGMF2hCcF1I7bluPfcLmi0Ai42blgSe4naX081MUgULAakUrS8iLhgBWv9AF
      E4FcZb8fhV1CCRZkjEgGekQrS081EE0kJvS00oT8HIVENxxgQyhdIE3GH6/Ri82gIQijztCo
      A2jaWUp+ihwg6gDEdTQcYHVcNAIonCedcL8vZQZlWEcXiJwkMTom04RwavVFw1AJtg0BHOtC
      F0wEyp2nnY7rAMskxYfgcWFaBIrnK+SUUktFBK0UWZpSNASwOi4aB+gXniwZ5wAxHHqZMIIj
      GWggAkG0whwnp3gdCBIwWg050XlBQwAbQuwNNmkFMvgFVqDJfAEXZOhNToxekoDWD18RYiSA
      CxwLVOQ9Si/sP37IZ1/cW/5CF1IEGucAUQmeTwBKMaYoO39kTdrpZHRPKRzCeR8Tc7RGLioB
      iATe+9Wb3DsoufXOahWLLxoHyMtpEWiZWPcw0UpqlAPstFr0TokAhhxAny8OsJInWCnNs88+
      wyHw+hvf5t23b/HE009gmoywqfH9oiS93Bo/XwI++IUZYaO/OedRxGfbaWfsHRzwlLux9nUv
      2qDyohgW+NUKiqJYyNXPXUaYBMendx8ROgmlLjA7u6RLZoQlSXKhMsLKAJ1WOnZ+ksQkknkZ
      YSIBpY8yv4JAliZorem0WxRFsXBNG8kIU4o0sWitSa0hCFNm3i+zjjOREaa05evf/t7U8WXo
      9qKJQJPZYABaLS6RriSM6wAjHuWddouDw+76F7sEnHPDUu9pYvHeAen8k84AGivQhlC4ME0A
      Ws3dLUIIY7kAw/OqXbHdatHr9da5zKURRggxsXrl1M5tReMI2xBcEMxECROlNDKnNKIIKGSC
      BtTw7067Rf+UIkJ9ZQWCKPqU7nzEAzUcYEPwI9abAbRWc8VFqZJO3ISzayAWt1oZ/fx0OID3
      Hls55NI0OTfe4IYANgRfxc6MYpEOMMi6GoNiSAFZmlGcUkCc9x5bcYB2dn7CIRoRaEOYTIeE
      6AeYTwTjkaAw4AoRWZZSFvmpbCajOkCaJrFI1zlAwwE2AB9i4JiuMenNa5IRQohWoJHflVJD
      06DWuooWPflnOcoBWmlKXpx+w451oCGADSCIYEz9o51XIl0ElBImH9UoHWl9SgQQjgggSyMn
      Og9oRKANIKYx1t+v1hqZoQoHCdEKNME4Rv/UTOcNnwTCCAfIsuxUk3PWiYYDbAB18v8AekG/
      4PiBx38HEbRWY97RNLH4NVZo/s2ne9y6e7hwXAgBPaIDuLJRglfCRSIAN48A5ijBEgTFUdZX
      CIKZ4Jw7Ox263fV5g+8f5Dw6XPwxh+CPlOAkpTgnItCJlUW5SCJQOdIgexIDJbgu8kaQyhEW
      d/y6fgCtLCPP1+cMy0vPlNJRgygCxc8lTdOGA6yK85RFtAh1YRADxHj6WRwgMBor4UOY4gCd
      zg69w8Uiy7LIS7dU0w6REEM5AGPMuckJODEOcJFQeD9VE2iAuSIQoAlDT7APgp1wprVaGf3+
      +rzBhXOkS7QGQMLQrKv1+SGAxgq0ARQujHWIH4UxZszOPwqRgB6xAnmZ1iXa7Tb5GsMhitIt
      LNk+XFu1Fq01IheQAEQCv/q7H/HZ44Lf/vIXvPmzt1hWsLlIIlDuAtkMAkiMnlkaRYKAOiKO
      EKb9Ca1Wm3yNEaGlW4EAVFWdwhjEn48K0StnhH31K89ySCBpX+IpAn0R0iUywrz3FyYjLC8c
      rdTUnqu0opyRERa8x2qF9/G30nm0YiyDLElS+r3DuetaZd1FWVKWauF4mXjHWi/OCjuXGWEf
      ffI55a7lEn0eOM2zTUbY1PgiCNfT+vtNrEURxYjJ35UmWo+Uir+pgsSYsQyyVruDK/O561p2
      3SEIqVExzmfheBnLaIv/lrWsA7YsI6z36HN+/LN3+Na3f4+nblwZHlfa8s3v/dtT45eh24sk
      ApVeZppBY5eYGc9CquQXNWoGHZ8nyzLKNekAgmA1qCUE2YEVaFCXyBpdZYVla1nLaaH2Ldms
      jes+4l/+8Af89Zu/POk1DfG7u4c86p29qMPoB5htBp1V3MqPOJvi39N+gCTNcGWxFseiCBgN
      LBNaIQGlRto92fV6pE8LM3lIe+cyLz/9In/43W+u5UJLteGcwEcPu2RWcbV9tjoSFl7IZnAA
      Y8xMbqgQEqOGOcE+TFeYjiHVR8nsXwY+BFKtFlesrsoijl4vsRZ/DrLCat/S4Rfv8+4XPfrd
      /bWZLxd3RpnGaCz8WcKgkGwd5pUWHIQcD82gQaaabABDAviyKJ0nS/RCDhD1u/FjaZLhyrMf
      DjH1dEWEz/dKXrymebB/2l0Jw0x5OXeBwq1Hr3A+cPv++uJrZn24UHmCZ3xwMflLGMR/ulBP
      SOuqzlY4RzuxC3WAAQcYRZKmlOeRAADS9i6Xrl7nm6++uLYLHUcEQsJMDvD25/u8/cXBl1rT
      AH0X+MXHj4917r945x77/XFZ2AtTCfEDzNMBQoilVAbBcF5kWBh3FGmaUq4hFqcoo7nWqPlG
      CqnhaGmS4M9BPNDU01VKcXNH8be/+pD9R/fXdqHjiEAx7n12+uAqlqW7B7MVx5hldbwd9aBw
      PJxQ1IMIZoZ8boyeHc9ffWiDVdZFgwK02jvkvcXxQL/4ZI98Dpcsy5JWYkmtopz3fmpE0TRr
      UxSnk6C/TtRygM71p9mVPXr+GLv2OjFHBwghVOLCcvgX79yd+ZsXWc4SUgON8GiEA8TdW83U
      AbSerQOE4DGjOoBMxwIBZO0WRX+xyPbevQP65ewPu3SO1BoSreZzAKYJ0Z5XDiAS+MEPfshr
      r7/G/uPjiQV1OL4INGvXFvRSHojBXPN3OL10UMc4NIHP9o7Ck+cpwFCJQLMU2OqDH/w8K7Gm
      1VqOA5TOzTUilM6RJbYKz5gvAk0pwVkLV5xu4+51YMoMKiFw7+7nFEHz8HB9dt5jWYHCtA5Q
      uMDDXlkpmitNBsCn+wU3dxXtiVidZZxBdTB4PnzUG1bK9oG5BKDnKMFSNaEY/BpqlE+I8UCL
      OICIUDrHPDdlWZbstrO58UnVZFPrsDbFu7OvBE8RgNKGv/iv/tvBXye8nElMc4D73YK3vzjg
      ShJQK8TyDbjF7Qc9BMXz19pjv6tjikBGCU/tZny8l/PcpYQwJxsM5vsBkEoEqv4MNY4wgLTV
      Ye/B5wvX5hcErDlXkiYWa9TcxhtBwpQ5PElbuFMq0rVO1CrBxd4XvPW7j2ZWNjgOjicC1e1e
      UVypLSI17/oqVFOGqR1YJBzbrKjE882ndnmnyqutK4g1to45OgBV6fFhKITUm1Ozdoeiv1gE
      cgscVd6XJMZWnWvmBNeNJMQPYJOU4M+hDgBQ9A/56b/5MT/813+9tgsdTwTyUx95CFH216xG
      AAMOIMFPfYAiDHWAcoWmHxBFpyd3Uw4KjwtC6adLIo6tQ6mZKYgh+Jj0HkZzgms4QNZeaveN
      ntrZz8i7EmsNqTFzwxqkhgNofT5ComvfVNbZ5dq1a3zl2afWdqHjcIC6EiEQKg6w2q5tqg/c
      ez/FARRHSvDfffSYTyul9r2H/ak6nZPQBLSCF662ufMopwyz84FhflkUVc01uOdZyfVpq02Z
      L9YBgp8fM+S9I7WRA7i5HMBhJytdGzPfsHBGUOsJvnv/EfQe8O6dxXLmsjgOB0DClHkyhEgA
      rCgCDez8UdyZ3uUHBCDhqEXR23cPFnqbB+e99kSHt+91Kb3MzAeGqk3SrIww70msHf4sUOtP
      SFsdygUiUOkDStzs9EsRvIvNNqzRhHkEUJlnRxE5wHmMBZLAj3/8VxSHj3nhtdmBcG/97Cfc
      un1nk2sDGU+SKH0Ymj9lRQIYE4Emdq4QAlTcZFS0imUKFzS1QwBhJzUohAfdknSOCDQ/gE1o
      jTil/AwRSGsz9WwmUXo35HqzoFUMqEuTBO9my/PipwlA6cgBznq5m1or0D/9L/5LXNHjt7fu
      AJdrT7x58wYffXyX4sWvopfICFNqcdbRAMMMHgmxcbRzuCD881sP+NYNWz14IKiF/bYG0Hi8
      9/jg8RP9yvb7BUg85r0bXlOJw5UONyOsAUAFT/Bx7uevZLx994DXn9iZuR4JIXZ8r1mzdyWp
      bQ37qYWKA9bdoyLgXDkWojz6/Pp5jhZP8PW92UTiRuK9R6moMM9as3MliulnrbWmLHK0qQ8q
      PrMZYUopkqzDtSu7M6YUysKRddpYpVBLZIQt09tqgEEGjyJgdcyOygtHWTWdMHoQy67m9tsa
      u1ElcRerLC2j43/26T4dJaANIMN5jRJkkJ01A0bHea21vHi9zd98dEArMXPPUao+I8xohbEa
      KWKGllIaYyzW6ql7NFXL0rqPz7ko+hjCcG2TCMFXja8NaZJwKH7mmhUBm9ipZ21tglazs8LO
      QkZY7Rfr8h63b9/m7t17M2RgxfMvv8Lvffubay0r0S09vTHX/bj4EyqOoBnU0FxNBPIyMIMe
      XUNEUOJRBN65e8h79w6GdXuU+OHO5GZwt1FvdCcxPH+tNVcJnveCQ3BkaUoIIzv9jOFG67nx
      +M45NJ5ZViARGDA2ayxhjjwvwWNqCM1YM1d3OAuofVPdu+/ymw/uc+vWO/zox3+zlgstYwX6
      zecHvP/gyLqhRkIhSudjuPDQDzCtIM+CVKEO//c7d+M5E9YjIw5NoFdW+kFFWIYoqnRLz49u
      P6ydOyrBRx/Zn7xwlWcuzU4TjAQwO7zDKIZ+DtRsV2Ta3plrCfK+nKsDeF8Om94tqvJQZwYF
      sCYhnPGkmFoCaN/4Krp3l+defI3XX31pLReaWQpkRO67f5iPRSUqjkIhSh9L+IXg6RaOd+91
      lzbD/frzA4rSVSZQmTKfKgkQHLnzmBHvs8bjQ8w7mCVDjq4RYDezc/0A8ziABI/SBjtMeFEz
      OUDW6lDOiQdyriTRY1VWxuCdI6nEAmPncwDE1xKAsQn+jDvDat+UiMJaxfvv3+HZZ57e2MVz
      F/ibD2PA3W+/OMT5WArkaCFHH2Neumi1qOz/mjAVDCcitYrU3YMeIh4lvjKtThJA5AC581h1
      dE1DwAeHC9GkWIdVg+hiw4sZv0mI+peSKmDuKDlmEll7l6I/Ox/C+7JKy6ynAOcKkqqTvTF2
      rkkzeFcrAtk0I5RnOyCulgB8mePF8id/8kdru1CdCJQ7z6ePu4gI7z3oRktExYoHYsuQA7gS
      Rdy9lXi0Et5/2KM7ojP84rP9qdh8AIKPoRAVAUzG/RgCWgKFD1McQEKIgW413CZyk9VjiGaW
      R6wqL1gdi2TNI5aktYOb4wvwZTHXHOtdOeQASmkU84LhQjR7TsAmLfwZzwqrDYf+yZtv8vCT
      W/zs7Q/XdqE6Eahw0dxYeokyfSjxruRx3/HrL/YrO3X8UJx3VeXkgASHUYEHhzl7/aMP3nlH
      UXMdTRRtxA+IaHw3V1KiJOoVqYYPHx5SVsQQgosEEKY5wH7u+GyvWxuxOQ9aqXpvsHiU0mRW
      UVYbwayZk6yNK2brAMGXpFbP9JV4l5PYpLqGmhsMKMFF38MEbJLh56zhLKC+LIpNSBK78Xqe
      /dINZW8lDoMH8fRKx2E/r0ScKj2wLGIyePCo4NAIRgXy8ujD1OJRNTurlugUUsGRGAUT4kzc
      6R2JVrQsfPLokF7p0eIrx1k8dxLdwmFmiEbzoGY1zK5k7czoWK5wDl2lrR3K3mwRSHwxVxcJ
      rsRWBIBiSpwE6Jc+imLi6wkgbRHOeEj0tCNMaf7o3/lT4E/X2gmwTgQqSsf1tqFXlBjxGB13
      2ihz+/hSZMABSjKTxV0Sj0GBEooR5dQwHekJlYyvBCWOxGqUHCluAhVBxcC7zKjKDBlFMKkc
      XXU6QL8s55oaZ0GrGfFAVe2dLIG8KLBqttKctDr4fI4I5HLSOXZy7wuydvTzKKVq8yF+8ckD
      XnvictS5at6fTVr0e+tLmjoNzN3iB6Xw1oE6Ecj5kid2M3pFgZISKw6rJHYhDyVFcpmHIcbt
      K/FkplIUxWGUYAljRKrxtaxcSxSBLD5ygInd3FQBdlpiKIKREgkBg0e8w4d6AsiLHCN+5awJ
      raBXTMfpDJTg1BhKV5Lq2YSVZDu4OQQgLsea2SKQuAJrBu9X1Srz4kty5yDUcwBt0zPPAU61
      ZnlZFtzcbdMvCrQ4tJSkBlwZCUBzpGSq4Ek1kR2HigC0ULqCwzwSgZ6RQqmJSrBVntToCXFG
      hnX5QWgZMAw4gEfExcy0GgIoirwauxqU0vzyo8/pFhMcVhxKa9LEkOd9Mj1bLrdZGz/HD6DE
      zc1LCL7ADHSAigNMEqT4Im5GlW4ytYa0TSjPdlLMiRFAnQgk3rHbSnFliRFHogJWCc7lUW5X
      gviyCnzzpFoqccVhcViEvN/jvS/uVTfja0OkdYhOIUPs3jhm8ZDoCFNE69DNSx2MlBz2epFT
      hBgbpGt0gLLoLww4q4PWiiLvUUyImAPiTYylLPO5jStM2sKXvZnxM5pQ6UOzIk9LjDni8MZM
      1xoSX1KWReV1r6lP1BDA8qgTgSQ42mlC8JEArPIkOpphVSiHyqlIINExngfxqFCS4EiU4Mo+
      WgaRnGEoy4rIsO794OM3oSQxBhUceVlyf28fqKxAvkSJkOgoAn16/z69XrcignoRyBXdqLiv
      CqXQ4uhP9PqS4NAmifH5RT9yvJlT6DEjwSR0FUc1M2dihAMAWK3HrGMiAj6PvcDEo2oMIkpb
      OKMh0SF4Pv30/dMTgUQELTHVzqgAPichkBqNK7qoatcmRA9uonV0Ukn8GC2OpBJX1IAAqpge
      gP3uIe99/DFANVd0cllrUKGkn+c8fPwIGOgAfuh4U6FAhRIVCvAFIn5KHheJ4+LxFZVgbegk
      hnKiqsIgtNoag3fzCQDm5xYMlPpZEF+gxziAnYrrUaHAu7zSTWp0AG2mLGrbDhHhwf1P+cXP
      /zV5//DkeoRNikBxV4+sNbMa5QuSVJNagy+62MRWBFAQfDRfhsqSoysCsCrBGIUVz0H3kF5v
      nys7OwDce3AfKje9JnqOLY5EgUiJAoKLH6AJxVBk0AhWSnT1H6FEhZJs4v2HEIkiTIRCLAOt
      NVd3WrgJ8UEN7O3aEso+yRwZHo4catOjJIqPE3FKw19Foo5l7FCEMlqPOftEJBK3y+PxGhHo
      LHEAEWHv0ed8eOc3dHau8sa3/oQkyY5PADFKkqUT5ydFIO89afWC24nFUmJVQmoNFgfeY5VB
      h3IYuFW6uNvrUGKNI9FCllhcKDg83KPffYziSQBcfjh0ohkcWnksHqOEUJkuQxmVSF2FQkQO
      EAlFhwIjjlD2yTqaEj9Wkdl7R6qF4hgikNGay+0OBwfjlfcUIYpHxqArk+3ceZIUX/bRZjxs
      PXiH1QbP7MJikykO2oxneIkIiRa0lFE/qrECKWNnhohsC0SEfvcxH33wC4zN+Nprf0C7fWn4
      +zEJQPjtr96i7xTf+f3fO5YcFYInsfEtdFrtake3JMaSmWilsLaF8gXBxU4puiwrp5YDShIl
      tBJD6TwP7n2M9jlUaYCJCoRQVqKWi+IWZVUdIqZURgWuesmhjKEICoyUqJBjcQTXp50m9JWM
      EYArc1ppQlCrK8G7O7tYk3Dw6OPxMufBobRFa0OiWcgB0vYOvn9A0poggCrVsQihXkQaVJ8Y
      gdFmwkMen6EWh5pRin00K+zLlmpfN0SEvLfHJx+8hXMlL7z8Pdo7V6bGHZMAAmn7Mlfw5FWP
      sKIoqtgVVZUtHP93CIFutzt8UHlvHw30ej2MsSQq2t1DCGRaUZQ5qU7RoaDfO0AkyvK+7KN8
      gTXtmOSiIMkycF0KKXB5n8OD/cqz7Oj1eigfLRkWRyhzNJ4izwlllyKPO/0gUM6VVSphGRVc
      TcAgiCvo9bpRVg6Bw/2HUaEWR573cUFRlmWVyHJ034OXEQtiRSJKk5j1hS/p97qg4m+Ip9/r
      o72O5Qq9p9vtonVMiNFaj5VWVLbF4d4DQnoZY0zVvFpR9vdRKIIvKYp82FneGFNFxHqUkrGO
      8z4Iee8ASfuEEPB+4D0PONcnz0uCFMN2SkfvWNM92EPbdOpeY0+zZHjfo89gsKGZ95QAABIe
      SURBVJbBMe/9cF4YLyE5GDv6b+89aZpOHYeo33xy+00kFNx49g3S9lVEGfr9/tT8xyQAjVUl
      j8qjHmGtVmtu6ES326XT6Qz/FtdFd3Zpt9tAm2tXrmNDl3a7TVplRaVaCFJgVSDp7NDr7Udr
      EA6IIlCn1UYk4Ixg8YSiizXCpc4O3YO7tNttEhVACRpHK7E4AlmWoFwfa3VUpJWgRMjSBIuv
      vMUxPCJLLVmiaWXZ0HKS7ztMu0NPx0ptJmnFBPMVspTaqSFJLDaJ+QN7QLvTxqQdssTSbrWG
      z6wuq6m1cwUjxXBMf/8L+od7KClJs4wkCFmajj13iHFCPaXodDrDVNbQamOtptVqAVAWPRIN
      qbWonqPVbteuw9qEVpZg0vFCY7PWPAtfNiNskOR/76O3OHj0OU89/x0u3/jKwnUckwAUL37t
      taOLH2OG9u71sb+NEqwSrE1JjCbgsFrwZYH4HGMuo8VHhTYUaCkjYaRpFJFUwFAiZQ+fH5Cm
      GYV48oP76JBH+VpKjIZAAAEdHL7sRwIg5hvoilNIyFEqYHWU2Q0yFmbh8wNal25G0+wxK+jF
      EuPdIQGM9gZIjK4NQR6Fbe3g+/vDv11/H5/vo3yPtN1CUR+qLL7ETHwQ2iRDowFEPSLRisSY
      2dWsAW0TCKerCIfguf/hz3l09z1uPPdtvvbd79U67upwao6wgYh0tBCP1WDTDlefejXa+a1F
      hz6UPYxNh95igydrtbEEOleeon3lmWjmlBJcl5AfkqRZFIEe3oFif/i7rkKfQVBSElwfI37o
      Q1BIHBtyrDgSXeXfqokK0uUBSdJeaG6chzRtjcXzjMbjJNYuzKKzrd2x80P/EVLuI8U+xiTD
      +5mEuD6mElkG0MYiIx+y+AJrYsWIuhLtR+clQ+U5eMfhvdtz17xOSPA8+vQ3fPDT/y0quN/7
      T7n+zNeX/vjhlB1hozDiMUqhtCZpXcJQkmiF9n2U76O0QeErJdjTufQERku8WaUxOiqvlIcx
      pID4t/ZFtDDhKiUYjIpWIBU8oTjA4KPtX2L4tZUSHfqYympkTJUgP5oTUB5ikgxzzI8fIEnb
      hOJoBx9VNq88+wYm3Zl7vs12CPlRRKj0H6BcF1VEmXxWiLP4ooYAEtQIBxBfYLXG2gUEYBOk
      KqkSyi69u7+bu+Z1QCRwcPcWH/zkf6Hs7/H8d/6M68+9URuvtAgn5gdYBKuPTHNKKRIc1hi0
      76J8LzaHE4cKBQaH0eMhDZYQrTeuW7FyieZPybFSYkRIOtfILj2N/zza/I3RSHGIxeEqM6jW
      KVYKPCqGXGiFrkSggUVFRFCui7bZsObocZBkO+SHXwz/Hk3yt9n8jz+O2cVXWWESHFYqI4Hb
      w9hk6FibhLj+UGkdXttYCCMEEEqM1jHobl6x36Q1NCdLcYgU+8PUznVDROg/+ogHH/wtyc5N
      vvqd/7hW91gFJ0YAi3ILNDHLC4iNoiW+AOP7aJ/H5tLio3iCr0oIHr1crcCGHBMsoThAKRWT
      3UOBkQKjLZ2br6Kz3WjlkYA1CVIMLEYjOoAUVZKII0kylMliffwBB5C4BqXMl+IAOmlBOcoB
      wuwyEDUwWYdQRBEo9PdI27uUvT2076NNNpZRN4ZQoM0kAaQoPxLZ6foYa7Gdm9jWtPnw6B7a
      iIsOPSn2UOUB4guU/nIf5ihEhGLvMx7e/hHKtnny9X+Isp0pPeY4ODECWNTOKOYDDJajsCpE
      y4rRaH9ItNcfOai0ScYyvo0ifuhioezGHV4JyvewUpA9/Ue0nv52LHgVCnq3/hkmuYkcfIK+
      9BXU/sdVeZSKAJQFHJ0X/z7KJFVuQhUxGSJnQHFEtMeAti10eTC0o686l8l2CHkkIMkfkbSv
      oOX96Nm26UwOQNlF29bYIaXtuDLrC4w26KRF5+U/nX0PSRsqjzr5Y6xNCK4fj39JiAiu95DH
      t/8/RITrr/x7pLs3AZYuirUIpxoOPQqtxp0zViuSm6+RXv8a2h3GGJ3KoRU9u+ONKIzWGCkx
      oY/kezAYXxHAEXFVolb+AGMz5NG72LRFO8ti3Ht2OZoz8diRUuVGQTj4hPK9H1RKpGFWHP2y
      UCbFJG38p39b1SdasedB0gKXR9t69y62cz0+Aynijj4jDCLsf4LZeXJiLQl6RATC94ZWqHmm
      SW0zpBKBKPZIOteHRPll4PqPefSb/5NHv/1nXHruu9x848+GH/86sTUikFHjleWMVqBMPFY8
      jv8Wh+7fiw6qSRFIKywOoxJcsTdsKK1dDyPFWIsfo8CEEm/SGPNTHUMC5tKzJJeeRj3+EBl5
      71oJsv8x3P8Vkl3GpjtRzFKrB8ONIn35H+I/+JeE2z84VpeaQZ0h1buLvvYyRiu0FCiTjdVV
      GkI80n+Ibo+boZW2Mfhv8LfPI1dYAJ208f0qK8z1MZ2bSP8R8PzK9wIQyh6Hd/6K/NFH7L7w
      x2Q3vrZRL/OJcYCFIhABPWK+sl/7xzEsQCmMOxyOMeVeFIHa1zDXXh2O1ze/hbnyQjQdFvsM
      OAChjIrsqMlV67hzawPBoZUayyYbZI+NVmY2SkH3M+wL/z58/K/QWYwnmSlnLwmlNOaFfwD9
      B6hibyUdIJ5P1F16X0Draix3KCXKZtHLOhEOHfY+xuzWlLpRZiywTfn+zJqfY6fZFuIqDuAL
      THYFyVdPkxSfc3j7X/Hop/8zducJbnzvL2jdfGXjIRYnxgEW3YjBo0dEGrUTX5I2trIC6aio
      3vgm+sEtVLKLGnmRKruMNhZrE4reo1hFLsRwA/P098fCeXV2GdMBjYoRmEqOagZVa0GPr1kr
      oHcPfeUFePEfwZWX49g1vCClFKSXUG5x15dJDD5yHfLIJRVRMTfZUG8ZhX94C3P9lfrJRsZq
      151SlGvXPqoDhBLduox7sLwpVIKj+Ozn9D76O7Jnvsu17/83KLO+VNxFODEOsIgAlAJMa/q4
      1uh0B0wa4/2za5hstzZBw4tCbn4XHUpQcZcf+BBG9Qv96p+jKstGrDGkqnyAo5qgRo33+tVK
      oYvHkO6invo+qnWtOr6e8uAq6URxZUWCMmk7WoKqtWtjhxG6aiIaVEQIj95H7z5bP9koAfj+
      0iKQGnKAEpXsRF/MAkjwFJ/+lIO/+x8J/cfsfvcvaX3l3zrRjx+2yAqkRv4/dlxbaD8RP2hx
      kRCyq5FlT0AjqNbVKkQ31vkXX6C1GX+wSqH0kac0dnk5qo0zOD5KZFprVNJG6fEXNNrT60vB
      dqYiNJc6rbVLyA8RCSgURht44jvAwLN8RKDSf4TKLs/+yEYcfdr3QS/xMerkyH8QClTSgfKw
      tjoHUCns9+jf+r9Q7RvsfPcv0enu8RqorAFbIwIxI39V2RZcjgqVwsWP8JU/g2zaNq3xaJtW
      Mewq7qihRD37x2DGC9YqbY+K7WozJgKpZDdGaD75naFbXSuFbl2duqbR0RP9ZaGSnZmbwDyY
      7BIh3ztau7HIk39YJbqPc4Bw95ezxR+lx6plKN9bajeOynN1ni9AJ9Ej63JQR+eLCNJ/QHn7
      h4T+Htmr/wRz6bmV7nUT2B4CQGp3dXXjm3D9G/Hf4sG0UDvP1M6gJUSnFQJag21Hhdi2p+JD
      BDW0FMkgDmgQO3/peXj8AfLs3x9+3For2J1+YSq7vCYO0I6K+qoiUGuX0N+HQZivSQiDDjcj
      HEBE8A/fI/3Gn9dPNEEAuP7UplELbVGhjDt+VdZFmQRcD6qyOlIc4N7/54S9D7Ev/Cn65je3
      Jn9gi0SgWRVj9XBT1EiUMWdA67jraZPEjznpVJaNmrmrFksqvVRxgNFy6zUW9KuvgJp+XPob
      f7EeAkh3jzWNznaj3X3AAZ76PrSijX+sKoTPwfVRM+OLRhTmqkwlS+gAaIuSMibzVDegs8tI
      /yGoBH/nR4R7v0K/8A+wr/5HKwWqnQSOTQBv//otTPsKr7y0nL13IcVffx2y+nZMwzkA7Oxd
      SVe5q9qm8aO0OzM/TqVMDD577o9RLgfUEQfQZoobqcsvzFjUmnYyk6FMsvIHYrJd3OOPjwjg
      2qvgBnVFj0SgcO+3mGsvzZ9s0EgwxGTKZe5MaRs3j5GNRrWuIh/9v3D4GerZP8Z+/78/ceV2
      WaxMAMHl3PnkHq1Wi4ePH+NEYIkeYYMMoZnYrQhpTs8vJUIwneELHq5pMF4pAgZlUnwQlGmB
      SNUEWo2NDcEjatDk7ai6QgyViMdW6UM1to7jjFUpSpuZ58+cO9nB9/YIwSGVIjkcW5V1dM7h
      v/gl+vl/t3aOEGIJSKl6o+ELlNSHG9StQymDLw4RqnOSy6gv3iT80f8A2SWqHxY+j63pETYP
      2ma8+Pyz3Hnv3dhcWcU+U5voETYJef2fQrI7xU0G4+Xr/zmYDMkuoWwCrSt4FMbYo1zeaqxW
      OtrMjY3V36riT9ZaxCSItrV9vI6z7qXGml3kpf8QtWK/LelcpigPUabKuaiaEcZ7rEJEtCLs
      f4S98ty0LjSIQ9IWLzHdUUIPUbo22KxuHSFJUSEHFZ+XXPkqvPSPkOzS1vcIO3ZG2PMvv8Lz
      0Re0VCDAOpQelV6a//sgwOuNv4RkB4q92UYVpSqlzUSLz+UX4O5RNOo6LDsrQSnUs6v3Y9Dp
      DlIcQKuu93HUAWTvQ/TVFxeLVwMdoNgD25k/dhSdp5G9D4Yh0Kp9A17+Jwt3/W3A1jjC1nqt
      tOISye5MSVZJ7DWgkh20zVDXvn4Ui6MMWxQnOBc6u4T0H8ePd+IZD9o3hc9+irrx+uLJJDoD
      5fYPVyJGdeMb8Pmby/kNtgxbEwu0EdhWrWk1olJ6n/p9eO7vRS422AGVjorwGYAyCcrntRWA
      BuHQ8uAd9BOzm54Px0tAeneR/Y9RT3x7+UVcfRm59+u5BoptxRb5ATZwTduaioUZQmtwoUqp
      rMYPlDCl5xDO9kGNZKuNHw8xyM60UAvjegRCQN7539Ff+8criYAqvQTZNdQyfoMtw7kmAJRB
      XXmhVgiKocIjEI6IxbYhndUkfPsQQyjqOYB89jP0k28sMYtCDj8DPOrJ76y8BnXzG7BE8Ny2
      YWscYZuC/t5/V2+rVyY6cIYY2UUvv4C69BxfItflRKHTeoVVKYV88rfob87w/k7i8HP0d/7r
      Yzmr1Ev/QX0Vui3H+eYA8cL1h2H8hQlHwXBKxTiWmp4A2wid7kBNjVKtFNK6jJpIfqmfxKJf
      /3N44lvHWsMgfP2s4VxagZaDTGRg1cvRZwG6dRmoiaNC0M/8wVJzKG3Rr/9nWxeqsGmcexFo
      JrQFGSlPPsIBzhpU6xIcTufhqhtfR03k/jYYx/kXgWZAVUnoA0Qz6BnlANllOPx0+vizf3gK
      qzlbuMAi0IjZk/jtHychZRugsksn77k+JzjfjrB50IZJM88W0uhSUOnOnFYYDebhwnKAaRFI
      n1kRiOzyhVNe14ULqwPEQkEjHECb2V7jLYe69jLq9f/ktJdxJnFxrUCjCTBQWYHOJgdQNoNF
      yS4NarES3xQJ/Pqnf8UX+yW/++2v+Plbv1m6Jtq2cYBYanHSD7BtRNpg01iaA3T3H7LXF77y
      zFMcBo9OOtxMAr2qR9iijLB1ZfCsa+5AbAw9OC/4ABPznGhG2CnPvWw21qbWsfUZYZ1L12jv
      OH715q8pdy07csjdUvGMUqgTyghbx/jBWK81ocoAA3Bax+YYI/OcxDpOe+5BRtiibjSbXseZ
      yAhT2vKtP/h7U8dPKiNsnVDta6jOjZEjcmZ1gAbHx4W1Aqknv4F5ciRLSji7ZtAGx8aFtQJF
      ghyrnNkowRcQF9YRVoezGgzX4Pho3IcVRGi8qRcQJ/bGVzFxnQZirdDTXkWDk0YjAlUYlEps
      cLHQ8PwBqkJZDS4WGhFoFGdhjQ3WikYEGkEjAl08NCLQANL4AS4iGhFoDGdhjQ3WiRMjgEWN
      srcBjSPs4qHhAAPI2a0L1OD4aAiggtAowRcRK2eEvfubn/Oo67h9621u3b6z/IW2XQQS4cwU
      A22wNiwdDVr0u/RL4frlDr0y4FxJUSq8CLJERphzbquzpUIIMNHHbNuytpqMsPWvY2kCUNpg
      jOfB48f03GOuXb7G559+gVeKZImMsFX6bZ1GtpTWGmNskxF2SuvY+oywJM2wSeD6c6+AScjs
      Lpev3SRlOePh1otAJm38ABcQq6VEKs3lK1ePdaFtV4KBxgp0AdFYgYZocoIvIv5/fw5uk3Mf
      VrMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Flights Delayed by Qtr' width='192'>
      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
      /pH8ajwBf7gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Quarterly Count' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Top Ten' width='192'>
      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
      /wO2h78TWWuqzQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
